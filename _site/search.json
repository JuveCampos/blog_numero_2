[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Todas las publicaciones",
    "section": "",
    "text": "Ordenar por\n      Por defecto\n      \n        Título\n      \n      \n        Fecha - Menos reciente\n      \n      \n        Fecha - Más reciente\n      \n      \n        Autor/a\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\niPhone 14: presentación, características y datos\n\n\n\ntecnologia\n\napple\n\niphone\n\n\n\n\n\n\n\n\n\n11 oct 2022\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nConvertir documentos de Word y Power Point a PDF en R\n\n\n\ntutoriales\n\nR\n\n\n\n\n\n\n\n\n\n10 ago 2022\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nScrap de Memes en R\n\n\n\nR\n\nweb scraping\n\nmemes\n\ntwitter\n\n\n\n\n\n\n\n\n\n10 mar 2022\n\n\nJorge Juvenal Campos Ferreira\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de Febrero, 2022 (y de meses anteriores)\n\n\n\nvisualizaciones\n\ndataviz\n\n\n\n\n\n\n\n\n\n2 mar 2022\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de Octubre, 2021 (v2)\n\n\n\nvisualizaciones\n\ndataviz\n\n\n\n\n\n\n\n\n\n3 nov 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de Octubre 2021\n\n\n\nvisualizaciones\n\ndataviz\n\n\n\n\n\n\n\n\n\n31 oct 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de Septiembre 2021\n\n\n\nvisualizaciones\n\ndataviz\n\n\n\n\n\n\n\n\n\n3 oct 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de agosto 2021\n\n\n\n\n\n\n\n\n\n\n\n31 ago 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nSolución al problema de GDAL para instalar la librería sf en mac\n\n\n\n\n\n\n\n\n\n\n\n6 ago 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nGenerando un blog y más cosas técnicas\n\n\n\nblog\n\nblogdown\n\n\n\n\n\n\n\n\n\n1 ago 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMi post de blogdown\n\n\n\n\n\n\n\n\n\n\n\n18 jul 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMi post sobre blogdown\n\n\n\n\n\n\n\n\n\n\n\n18 jul 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nTabulizer para tablas en pdf\n\n\n\npdf\n\nTutoriales\n\ngraficas\n\n\n\n\n\n\n\n\n\n19 may 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\n30DayChartChallenge 2021. Mis Gráficas\n\n\n\nchallenges\n\n30daychartchallenge\n\ngraficas\n\ndataviz\n\n\n\n\n\n\n\n\n\n1 may 2021\n\n\nJorge Juvenal Campos Ferreira\n\n\n\n\n\n\n\n\n\n\n\n\nPivoteando bases: breve tutorial de pivot_longer y pivot_wider\n\n\n\nTutoriales\n\nR\n\n\n\n\n\n\n\n\n\n4 dic 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nCortando Islas\n\n\n\nMapas\n\n\n\n\n\n\n\n\n\n26 jul 2020\n\n\nJuvenal Campos y Ami Sosa\n\n\n\n\n\n\n\n\n\n\n\n\nEjemplos de lo que se puede hacer en shiny\n\n\n\nshiny\n\n\n\n\n\n\n\n\n\n3 mar 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nDistancia Punto a Linea\n\n\n\nMapas\n\nR\n\nTutoriales\n\n\n\n\n\n\n\n\n\n18 feb 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizando pirámides de población en R\n\n\n\nR\n\nggplot2\n\ndemografía\n\nvisualización\n\n\n\n\n\n\n\n\n\n26 ene 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nTutorial de mapas en Leaflet\n\n\n\nTutoriales\n\nMapas\n\nR\n\n\n\n\n\n\n\n\n\n13 ene 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nNuestro primer Post\n\n\n\nBlog\n\n\n\n\n\n\n\n\n\n5 ene 2020\n\n\nJuvenal Campos\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Juve Blog",
    "section": "",
    "text": "Bienvenido a mi blog personal. Aquí encontrarás tutoriales de R, análisis de datos, visualizaciones y proyectos personales.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\niPhone 14: presentación, características y datos\n\n\n\ntecnologia\n\napple\n\niphone\n\n\n\n\n\n\n\n\n\n11 oct 2022\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nConvertir documentos de Word y Power Point a PDF en R\n\n\n\ntutoriales\n\nR\n\n\n\n\n\n\n\n\n\n10 ago 2022\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nScrap de Memes en R\n\n\n\nR\n\nweb scraping\n\nmemes\n\ntwitter\n\n\n\n\n\n\n\n\n\n10 mar 2022\n\n\nJorge Juvenal Campos Ferreira\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de Febrero, 2022 (y de meses anteriores)\n\n\n\nvisualizaciones\n\ndataviz\n\n\n\n\n\n\n\n\n\n2 mar 2022\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de Octubre, 2021 (v2)\n\n\n\nvisualizaciones\n\ndataviz\n\n\n\n\n\n\n\n\n\n3 nov 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de Octubre 2021\n\n\n\nvisualizaciones\n\ndataviz\n\n\n\n\n\n\n\n\n\n31 oct 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de Septiembre 2021\n\n\n\nvisualizaciones\n\ndataviz\n\n\n\n\n\n\n\n\n\n3 oct 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMis visualizaciones de agosto 2021\n\n\n\n\n\n\n\n\n\n\n\n31 ago 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nSolución al problema de GDAL para instalar la librería sf en mac\n\n\n\n\n\n\n\n\n\n\n\n6 ago 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nGenerando un blog y más cosas técnicas\n\n\n\nblog\n\nblogdown\n\n\n\n\n\n\n\n\n\n1 ago 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMi post de blogdown\n\n\n\n\n\n\n\n\n\n\n\n18 jul 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nMi post sobre blogdown\n\n\n\n\n\n\n\n\n\n\n\n18 jul 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nTabulizer para tablas en pdf\n\n\n\npdf\n\nTutoriales\n\ngraficas\n\n\n\n\n\n\n\n\n\n19 may 2021\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\n30DayChartChallenge 2021. Mis Gráficas\n\n\n\nchallenges\n\n30daychartchallenge\n\ngraficas\n\ndataviz\n\n\n\n\n\n\n\n\n\n1 may 2021\n\n\nJorge Juvenal Campos Ferreira\n\n\n\n\n\n\n\n\n\n\n\n\nPivoteando bases: breve tutorial de pivot_longer y pivot_wider\n\n\n\nTutoriales\n\nR\n\n\n\n\n\n\n\n\n\n4 dic 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nCortando Islas\n\n\n\nMapas\n\n\n\n\n\n\n\n\n\n26 jul 2020\n\n\nJuvenal Campos y Ami Sosa\n\n\n\n\n\n\n\n\n\n\n\n\nEjemplos de lo que se puede hacer en shiny\n\n\n\nshiny\n\n\n\n\n\n\n\n\n\n3 mar 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nDistancia Punto a Linea\n\n\n\nMapas\n\nR\n\nTutoriales\n\n\n\n\n\n\n\n\n\n18 feb 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nVisualizando pirámides de población en R\n\n\n\nR\n\nggplot2\n\ndemografía\n\nvisualización\n\n\n\n\n\n\n\n\n\n26 ene 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nTutorial de mapas en Leaflet\n\n\n\nTutoriales\n\nMapas\n\nR\n\n\n\n\n\n\n\n\n\n13 ene 2020\n\n\nJuvenal Campos\n\n\n\n\n\n\n\n\n\n\n\n\nNuestro primer Post\n\n\n\nBlog\n\n\n\n\n\n\n\n\n\n5 ene 2020\n\n\nJuvenal Campos\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "posts/2021-08-01-generando-un-blog-y-mas-cosas-tecnicas/index.html",
    "href": "posts/2021-08-01-generando-un-blog-y-mas-cosas-tecnicas/index.html",
    "title": "Generando un blog y más cosas técnicas",
    "section": "",
    "text": "En esta entrada de blog planeo ir escribiendo tutoriales y guías técnicas para poder tabajar con R y blogdown."
  },
  {
    "objectID": "posts/2021-08-01-generando-un-blog-y-mas-cosas-tecnicas/index.html#proceso-de-trabajo",
    "href": "posts/2021-08-01-generando-un-blog-y-mas-cosas-tecnicas/index.html#proceso-de-trabajo",
    "title": "Generando un blog y más cosas técnicas",
    "section": "Proceso de trabajo",
    "text": "Proceso de trabajo\nUna vez que ya estamos decididos a generar nuestra página con esta librería ( decidirse es el paso más difícil) ponemos manos a la obra.\nUn primer paso sería revisar los temas de Hugo para ver cual es el tema que más se adapta a tus gustos y necesidades.\nOtro paso inicial sería tener a la mano imagenes para adornar tu página principal y tener una idea mas o menos clara de como quieres que se vea la página.\nTambién es conveniente que redactes un texto para explicar acerca de tí, quién eres y que esperas lograr publicando tu blog, y también tener a la mano tus redes de contacto (RRSS, correo) para ponerlos a disposición de la gente que te gustaría que te contactara.\nUna vez con todo esto, describo a continuación como es el proceso básico para generar un blog por primera vez.\n\nPara crear el blog por primera vez:\n\nNos vamos a File &gt; New Project &gt; en la barra de herramientas de RStudio.\n\n\n\nSeleccionamos New Directory &gt; para crear una carpeta con todos los archivos que se van a requerir. Una vez aquí seleccionamos la opción de Website using blogdown para generar un directorio adaptado a este fin.\n\n\n\nUna vez que vamos a crear el nuevo directorio, le damos un nombre y seleccionamos la opción de descargar Hugo, el tema que se va a ocupar (ver temas en https://themes.gohugo.io) y demás opciones por default.\n\nTerminamos por presionar Create Project.\n\n\nUna vez que configuramos el proyecto y el paquete blogdown ya creo los archivos base, la sesión se tiene que ver como en la siguiente imagen:\n\n\n\nPara correr el sitio, nos vamos a la sección de Addins, le damos en Serve Site y en la ventana del visualizador se debería ver la página generada.\n\n\n\nLa página generada se puede ver como en la imagen a continuación. Se utiliza el tema seleccionado y se ponen, por default, tres posts que podemos eliminar en la carpeta de contenido.\n\n\nLa página se puede modificar, modificando los archivos de la carpeta de layouts dentro de los archivos que ya nos instaló el paquete blogdown. Esto para darle una identidad propia, si se requiere.\n\n\nPara publicar una nueva entrada:\nPara publicar una entrada, seguimos el siguiente procedimiento:\n\nNos vamos a la sección de Addins y seleccionamos New Post. Una vez que lo hacemos, nos sale la siguiente ventana:\n\n\n\nYa en esta ventana, rellenamos cada campo de metadatos con los datos que consideremos pertinentes.\n\n\nY, a partir de acá, prosigue escribir el artículo con nuestros conocimientos de R y RMarkdown."
  },
  {
    "objectID": "posts/2020-03-03-ejemplos-de-lo-que-se-puede-hacer-en-shiny/index.html",
    "href": "posts/2020-03-03-ejemplos-de-lo-que-se-puede-hacer-en-shiny/index.html",
    "title": "Ejemplos de lo que se puede hacer en shiny",
    "section": "",
    "text": "¿Qué es shiny?\nLa librería {shiny} es un paquete de R que nos permite realizar aplicaciones web interactivas a partir de utilizar funciones en el lenguaje R. Al igual que otros paquetes de este lenguaje de programación, como dplyr o ggplot, para usar shiny tenemos que instalarlo desde el CRAN y llamarlo en nuestra sesión de R. Tan simple como eso.\nShiny es altamente versatil y nos permite hacer páginas web funcionales sin la necesidad de aprender el lenguaje HTML ni las hojas de estilo CSS, lo cual lo hace muy práctico para muchos perfiles de analistas que deseen publicar su trabajo o explorar ideas y que no tienen los recursos para contratar un programador, o que deséen hacerlo por su cuenta.\nEsta es la primera entrada de blog que elaboraré respecto al tema. Primero que nada, deseo mostrar ¿Qué se puede hacer con esta librería?"
  },
  {
    "objectID": "posts/2020-03-03-ejemplos-de-lo-que-se-puede-hacer-en-shiny/index.html#ejemplos-de-lo-que-se-puede-hacer-con-shiny",
    "href": "posts/2020-03-03-ejemplos-de-lo-que-se-puede-hacer-en-shiny/index.html#ejemplos-de-lo-que-se-puede-hacer-con-shiny",
    "title": "Ejemplos de lo que se puede hacer en shiny",
    "section": "Ejemplos de lo que se puede hacer con shiny",
    "text": "Ejemplos de lo que se puede hacer con shiny\n\nMétrica de gobierno abierto, 2019\n\nhttps://lnppmicrositio.shinyapps.io/metricadegobiernoabierto2019/\n\nPágina donde se muestran los resultados del estudio de la Métrica de Gobierno Abierto, realizado en 2018 por el CIDE. Esta aplicación es un tablero que complementa a los entregables impresos, que a su vez funciona como un repositorio de datos, de archivos, explicación de la metodología y sistema de consulta interactivo.\n\nDistancia punto a línea\n\nhttps://juvenalcampos.com/2020/02/18/distancia-punto-a-linea/\n\nEn esta entrada de blog se incluye al final una aplicación shiny, la cual se construye a partir de una función previamente programada para calcular la distancia de un punto del mapa hasta el punto más cercano a la frontera con U.S.. Hacer el shiny permite que cualquier persona pueda calcular este punto y esta distancia, sin saber absolutamente nada de programación en R.\n\nEcobici (Datatón)\n\nhttps://lnppmicrositio.shinyapps.io/ecobiciDataton/\n\nEsta aplicación fué una entrada para el Datatón de Visualización de datos de ecobici del CIMAT. Su realización fué un trabajo conjunto entre analistas que usaron Python y R para el análisis de datos, comunicando los resultados a la aplicación a través de una API.\n\nExploración de la Red de Caminos Nacional\n\nhttps://lnppmicrositio.shinyapps.io/redCaminosShiny/\n\nAplicación para explorar la Red Nacional de Caminos de INEGI, filtrandola a nivel estado."
  },
  {
    "objectID": "posts/2020-03-03-ejemplos-de-lo-que-se-puede-hacer-en-shiny/index.html#apps-de-otros-autores.",
    "href": "posts/2020-03-03-ejemplos-de-lo-que-se-puede-hacer-en-shiny/index.html#apps-de-otros-autores.",
    "title": "Ejemplos de lo que se puede hacer en shiny",
    "section": "Apps de otros autores.",
    "text": "Apps de otros autores.\n\nParámetros de la función binomial.\n\nhttps://segasi.shinyapps.io/binomial/\n\nEn esta aplicación, @segasi juega a experimentar los cambios en los parámetros de una variable que distribuye binomial.\n\nShiny apps for introductory statistics.\n\nhttps://github.com/ShinyEd/intro-stats\n\nEn este repositorio, @minebocek crea aplicaciones escritas con shiny para la enseñanza de estadística introductoria a través de simulación computacional.\n\nIn Review: Your 2019 on Twitter\n\nhttps://gadenbuie.shinyapps.io/tweets-of-2019/\n\nEn esta aplicación, @gadenbuie crea una aplicación para poder explorar nuestra actividad en Twitter de manera rápida: nos brinda datos sobre nuestros Tweets más seguidos y las personas con las que más interactuamos.\n\nCoronavirus Tracker\n\nhttps://shiny.john-coene.com/coronavirus/\n\nEn esta aplicación, se monitorizan los datos de infección del coronavirus en tiempo real a partir de datos de la John Hopkins.\n\nWes Anderson Actor Network\n\nhttps://committedtotape.shinyapps.io/wesandersonnetwork/\n\nEn esta aplicación, @committedtotape nos muestra las relaciones entre actores que han participado en la filmografía de Wes Anderson.\n\nGalerías de aplicaciones Shiny\nIgualmente, existen varias galerías de aplicaciones hechas en Shiny, por ejemplo, las siguientes:\n\nhttps://shiny.rstudio.com/gallery/\nhttps://twitter.com/ShinyappsRecent\nhttp://showmeshiny.com\n\nLas cuales son un punto para tomar inspiración, ideas (y código) para poder realizar nuestras propias aplicaciones web.\nEsta es la primera entrada de blog sobre shiny. Planeo escribir un par más de ellas: uno donde se ahonde más sobre la naturaleza de la paquetería y otro explicando las funcionalidades y el tipo de usuario que podría sacarle más provecho.\nHasta la próxima.\nJuvenal Campos."
  },
  {
    "objectID": "posts/2022-08-10-convertir-documentos-word-powerpoint-pdf-r/index.html",
    "href": "posts/2022-08-10-convertir-documentos-word-powerpoint-pdf-r/index.html",
    "title": "Convertir documentos de Word y Power Point a PDF en R",
    "section": "",
    "text": "Durante la primera mitad del año me tocó estar trabajando con infografías en Word (y PPTX) acerca de un proyecto del cual no puedo hablar porque todavía no se publica. En un punto, en el equipo llegamos a tener 512 archivos de word y un día resultó que teníamos que convertirlos todos a PDF. Para agravar las cosas, yo había estado trabajando en Power Point, y también teníamos que hacer la conversión.\nEl método tradicional para convertir archivos de office a PDF es utilizando la función de Guardar como… que ya viene en Word, o el Exportar de Power Point. Esta es la opción directa. Sin embargo… yo tenía que hacer esto 512 veces, lo cual lo hacía que el proceso fuese bastante tardado.\nQuizá, si le mueves al R, sabrás que se puede trabajar con documentos parametrizados; esto es, documentos que cambian dependiendo de una base de datos. Sin embargo, como en el equipo se decidió que sería más práctico hacerlo en Word (porque generalmente, en un equipo de trabajo, no todos usan R, además de que Word es prácticamente un estándar de trabajo en las oficinas de todo el mundo, y quedaron más bonitos que lo que hubiese podido hacer).\nEntonces, aprovechando mis conocimientos de programación y buscando una manera de automatizar el proceso encontré una forma de realizar esta transformación utilizando código de R, para el caso en el cual tengas que transformar miles y miles de Words a PDF.\nPara que el código funcione se requiere lo siguiente:\n\nR instalado (y RStudio).\nPara que me funcionara a mí en mi Mac Pro M1 (2020), instalé una versión de LibreOffice; programa Open-Source de ofimática (el que generalmente viene para Línux). Si bien para Windows vi que existían métodos alternativos, creo que esta solución debería funcionar en una mayor cantidad de casos.\n\n\nInstalación de LibreOffice\n\nDocumentos a transformar.\n\nUna vez que contamos con estos elementos, el siguiente código nos puede ayudar a la transformación:"
  },
  {
    "objectID": "posts/2022-08-10-convertir-documentos-word-powerpoint-pdf-r/index.html#r-cuenta-con-librerías-capaces-de-ayudarnos-a-convertir-archivos-de-office-a-pdf-los-cuales-pueden-ayudarnos-cuando-el-guardar-como-nos-queda-corto.",
    "href": "posts/2022-08-10-convertir-documentos-word-powerpoint-pdf-r/index.html#r-cuenta-con-librerías-capaces-de-ayudarnos-a-convertir-archivos-de-office-a-pdf-los-cuales-pueden-ayudarnos-cuando-el-guardar-como-nos-queda-corto.",
    "title": "Convertir documentos de Word y Power Point a PDF en R",
    "section": "",
    "text": "Durante la primera mitad del año me tocó estar trabajando con infografías en Word (y PPTX) acerca de un proyecto del cual no puedo hablar porque todavía no se publica. En un punto, en el equipo llegamos a tener 512 archivos de word y un día resultó que teníamos que convertirlos todos a PDF. Para agravar las cosas, yo había estado trabajando en Power Point, y también teníamos que hacer la conversión.\nEl método tradicional para convertir archivos de office a PDF es utilizando la función de Guardar como… que ya viene en Word, o el Exportar de Power Point. Esta es la opción directa. Sin embargo… yo tenía que hacer esto 512 veces, lo cual lo hacía que el proceso fuese bastante tardado.\nQuizá, si le mueves al R, sabrás que se puede trabajar con documentos parametrizados; esto es, documentos que cambian dependiendo de una base de datos. Sin embargo, como en el equipo se decidió que sería más práctico hacerlo en Word (porque generalmente, en un equipo de trabajo, no todos usan R, además de que Word es prácticamente un estándar de trabajo en las oficinas de todo el mundo, y quedaron más bonitos que lo que hubiese podido hacer).\nEntonces, aprovechando mis conocimientos de programación y buscando una manera de automatizar el proceso encontré una forma de realizar esta transformación utilizando código de R, para el caso en el cual tengas que transformar miles y miles de Words a PDF.\nPara que el código funcione se requiere lo siguiente:\n\nR instalado (y RStudio).\nPara que me funcionara a mí en mi Mac Pro M1 (2020), instalé una versión de LibreOffice; programa Open-Source de ofimática (el que generalmente viene para Línux). Si bien para Windows vi que existían métodos alternativos, creo que esta solución debería funcionar en una mayor cantidad de casos.\n\n\nInstalación de LibreOffice\n\nDocumentos a transformar.\n\nUna vez que contamos con estos elementos, el siguiente código nos puede ayudar a la transformación:"
  },
  {
    "objectID": "posts/2022-08-10-convertir-documentos-word-powerpoint-pdf-r/index.html#caso-de-transformación-de-word",
    "href": "posts/2022-08-10-convertir-documentos-word-powerpoint-pdf-r/index.html#caso-de-transformación-de-word",
    "title": "Convertir documentos de Word y Power Point a PDF en R",
    "section": "Caso de Transformación de Word:",
    "text": "Caso de Transformación de Word:\nPara la transformación a Word vamos a utilizar el paquete {doconv} (disponible en el CRAN).\n\n\n# Guardado automático en pdf:\n\n# Librerias ----\nlibrary(doconv)    # Convertir a PDF\nlibrary(tidyverse) # Manejo de datos\n\n# Carpeta de archivos WORD (donde tengo mis archivos) ----\n# Cambiar a la ubicación de tu carpeta: \norigen &lt;- \"/Users/juvenalcampos/Downloads/Origen\"\n\n# Carpeta para depositar archivos PDF\n# Crear una carpeta nueva si se requiere.\ndestino &lt;- \"/Users/juvenalcampos/Downloads/Destino\"\n\n# Proceso ----\n\n# 1. Guardamos los archivos. \narchivos &lt;- list.files(origen) \ndirecciones &lt;- str_c(origen, \"/\", list.files(origen))\n\n# Aplicamos el bucle de transformación: \nlapply(seq_along(direcciones), function(j){\n\n  # Usamos tryCatch por si algún paso se complica, el proceso no se detenga: \n  tryCatch({\n\n    direccion_archivo &lt;- direcciones[j]\n    nombre_archivo &lt;- archivos[j] %&gt;%\n      str_replace(pattern = \".docx\", replacement = \".pdf\")\n\n    # Transformación: \n    docx2pdf(input =\n               direccion_archivo,\n             output =\n               str_c(destino, \"/\", nombre_archivo))\n\n    print(str_c(nombre_archivo))\n  },\n  \n  # Imprimimos los errores, para ver donde ocurrió el problema: \n  error = function(e){print(str_c(\"Error en j = \", nombre_archivo))})\n})"
  },
  {
    "objectID": "posts/2022-08-10-convertir-documentos-word-powerpoint-pdf-r/index.html#caso-del-power-point",
    "href": "posts/2022-08-10-convertir-documentos-word-powerpoint-pdf-r/index.html#caso-del-power-point",
    "title": "Convertir documentos de Word y Power Point a PDF en R",
    "section": "Caso del Power Point:",
    "text": "Caso del Power Point:\n\nEn este caso, me funcionó la librería {docxtractr} para realizar un proceso similar, solo que ahora con archivos de Power Point.\n\n# Librerias:\nlibrary(tidyverse)\nlibrary(docxtractr)\n\n# Carpeta de origen de los archivos: [CAMBIAR]: \norigen &lt;- \"/Users/juvenalcampos/Downloads/Origen\"\n\n# Carpeta para depositar archivos PDF\n# Crear una carpeta nueva si se requiere.\ndestino &lt;- \"/Users/juvenalcampos/Downloads/Destino\"\n\n# Archivos: \narchivos &lt;- list.files(root, \n                       full.names = TRUE, \n                       pattern = \".pptx\")\n\n# Bucle de transformación: \nlapply(seq_along(archivos), function(i){\n  \n  tryCatch({\n  convert_to_pdf(path = archivos[i],\n                 pdf_file = str_c(destino, \"/\", \n                                  archivos[i] %&gt;%\n                                    str_remove(pattern = \".pptx\"),\n                                  \".pdf\"))\n  print(i)},\n  \n  # Imprimimos los errores, para ver donde ocurrió el problema: \n  error = function(e){print(str_c(\"Error en = \", archivos[i]))})\n  \n})\n\n\nObservaciones:\nCheca que el documento no tenga el Control de cambios activado, o el pdf se va a generar con comentarios incluídos.\n\n\nLógica del proceso:\nLa lógica del proceso (o al menos como yo la entendí) consiste en que R ejecuta una acción que le manda el archivo de Word a LibreOffice con la orden de transformarlo a PDF. La transformación no se hace en R, solo se gestiona el bucle de envíos al programa que sí lo hace.\nEspero que este proceso les sirva a aquellas personas que se vean en una situación similar; siempre que se pueda automatizar algún proceso tedioso en la oficina ( entendido por mí como algo que hacemos igual por más de tres veces con audífonos puestos) hay que tratar de ver si se puede automatizar.\nCualquier duda u observación, mandarla a mi correo juvenalcampos.publicaciones@gmail.com o dejar el comentario en la parte de abajo:"
  },
  {
    "objectID": "posts/2020-01-05-nuestro-primer-post/index.html",
    "href": "posts/2020-01-05-nuestro-primer-post/index.html",
    "title": "Nuestro primer Post",
    "section": "",
    "text": "Hacer un blog es una idea que había estado rondandome la cabeza durante ya un año, a inicios del 2019, cuando me comprometí públicamente en un Tweet a hacerlo como uno de mis propósitos de R de año nuevo (tweet al cual el mismo Hadley Wickham le dió RT).\n\n\nMy #rstats goals for 2019:1. Learn how to use Sentiment Analysis 2. Learn how to deal with Twitter Data3. Improve my #RMarkdown skills and learn how to use #Blogdown & #Bookdown4. Find mates to work in new exciting projects!\n\n— Juvenal (@JuvenalCamposF) January 1, 2019\n\n\nHoy, en enero del 2020 y tras las vacaciones de Diciembre (y una gripa espantosa que me tuvo en cama pensando muchas cosas) me decidí ya, a armar un blog con la librería blogdown de RStudio y de una vez, empezar a publicar cositas, tanto de R como de otros temas de mi interés (que, al final de cuentas, si me interesan a mi muy probablemente le interesen a alguien mas)."
  },
  {
    "objectID": "posts/2020-01-05-nuestro-primer-post/index.html#primer-post-de-la-página.",
    "href": "posts/2020-01-05-nuestro-primer-post/index.html#primer-post-de-la-página.",
    "title": "Nuestro primer Post",
    "section": "",
    "text": "Hacer un blog es una idea que había estado rondandome la cabeza durante ya un año, a inicios del 2019, cuando me comprometí públicamente en un Tweet a hacerlo como uno de mis propósitos de R de año nuevo (tweet al cual el mismo Hadley Wickham le dió RT).\n\n\nMy #rstats goals for 2019:1. Learn how to use Sentiment Analysis 2. Learn how to deal with Twitter Data3. Improve my #RMarkdown skills and learn how to use #Blogdown & #Bookdown4. Find mates to work in new exciting projects!\n\n— Juvenal (@JuvenalCamposF) January 1, 2019\n\n\nHoy, en enero del 2020 y tras las vacaciones de Diciembre (y una gripa espantosa que me tuvo en cama pensando muchas cosas) me decidí ya, a armar un blog con la librería blogdown de RStudio y de una vez, empezar a publicar cositas, tanto de R como de otros temas de mi interés (que, al final de cuentas, si me interesan a mi muy probablemente le interesen a alguien mas)."
  },
  {
    "objectID": "posts/2020-01-05-nuestro-primer-post/index.html#elaboración-un-blog-con-blogdown-platicadito.",
    "href": "posts/2020-01-05-nuestro-primer-post/index.html#elaboración-un-blog-con-blogdown-platicadito.",
    "title": "Nuestro primer Post",
    "section": "Elaboración un blog con Blogdown, platicadito.",
    "text": "Elaboración un blog con Blogdown, platicadito.\n(Próximamente el tutorial).\nBlogdown es una librería que, mediante el uso de funciones de R y el Entorno RStudio, nos facilita la elaboración de blogs al crear publicaciones de manera cómoda y sin tener que instalar programas adicionales.\nLa librería pasa el código de R a un framework de escritura de blogs llamado Hugo, el cuál administra de manera sencilla la adición de los posts dentro de una página principal. Este framework se escribe muy distinto al HTML o al codigo de R, pero googleando un poco es posible encontrar la manera de personalizarlo para darle funcionalidades a la medida, como el añadido de elementos en la barra superior (los enlaces a mis redes sociales) o el añadido de tags HTML desde mis archivos *.md, archivos en los cuales escribo el contenido y son muy similares a los *.rmd que creamos en RStudio para hacer reportes.\nSi bien aprendí lo mínimo indispensable para poder montar el sitio y poderle hacer modificaciones (me sirvió mi entrenamiento en desarrollo web derivado de aprender de la librería shiny), próximamente espero sacar un documento o tutorial en el cual explique de manera más técnica toda mi experiencia armando este blog y que sea aplicable a otros blogs y otras experiencias."
  },
  {
    "objectID": "posts/2020-01-05-nuestro-primer-post/index.html#mis-verdaderas-intenciones.",
    "href": "posts/2020-01-05-nuestro-primer-post/index.html#mis-verdaderas-intenciones.",
    "title": "Nuestro primer Post",
    "section": "Mis verdaderas intenciones.",
    "text": "Mis verdaderas intenciones.\nYa en serio, mis verdaderas intenciones estan en mi motivación para crear contenido, en este caso escrito. Vivimos en una sociedad tan enfocado en el consumo que faltan mas personas creativas, y si bien no me considero un genio, creo poder aportar un granito al entorno en el que vivo y me desenvuelvo con mi trabajo y experiencia.\nOtro de los motivos es aprovechar las plataformas para poder escribir y ser leído, teniendo un espacio propio. Si bien puedo acudir a plataformas como Medium para escribir (y que me paguen), siempre es importante tener una especie de portafolio propio, el cual puedas exhibir tu trabajo sin problemas y con el formato que tu definas. Igualmente, planeo beneficiarme del mismo tipo de presión social que alguien que se inscribe al gimnasio en año nuevo y lo anuncia a todo el mundo, para que la misma presión de los amigos me presione para escribir y no abandonar la nueva actividad.\nY finalmente, también me meto a esto por aumentar un poco la visibilidad de mi trabajo y mejorar un poco mi marca personal, para sacar ideas de tweets y también, para promocionar alguna que otra de las actividades que tengo planeada a lo largo de este año.\nMuchas gracias por leerme. Estamos en contacto.\nDisculpen la redacción de ingeniero, igual es la intención mejorarla.\nJuvenal."
  },
  {
    "objectID": "posts/2021-05-19-tabulizer-para-tablas-en-pdf/index.html",
    "href": "posts/2021-05-19-tabulizer-para-tablas-en-pdf/index.html",
    "title": "Tabulizer para tablas en pdf",
    "section": "",
    "text": "Advertencia\n\n\n\nNOTA IMPORTANTE: La librería tabulizer ya no está disponible en CRAN desde 2021. Este tutorial es de archivo histórico y el código no es ejecutable en la versión actual. Para extraer tablas de PDFs actualmente se recomienda usar librerías como pdftools o pdfplumber en Python.\nA inicios de año generé un pequeño hilo de Twitter sobre como aprovechar tablas provenientes de un *.pdf en nuestros análisis de #rstats.\nSin embargo, como generalmente los hilos de Twitter son vanos y se olvidan con el tiempo, he decidido generar una entrada de blog para tener el código a la mano para futuros trabajos y, de esta manera, no estar googleando mis hilos cada vez que necesite sacar información de tablas en *.pdf. Igualmente, tener la entrada de blog permite que otros usuarios puedan también acceder a este contenido de manera más fácil."
  },
  {
    "objectID": "posts/2021-05-19-tabulizer-para-tablas-en-pdf/index.html#tablas-en-.pdf",
    "href": "posts/2021-05-19-tabulizer-para-tablas-en-pdf/index.html#tablas-en-.pdf",
    "title": "Tabulizer para tablas en pdf",
    "section": "Tablas en *.pdf",
    "text": "Tablas en *.pdf\nMuchas veces nos vamos a ver en la necesidad de extraer datos en *.pdf; ya sea porque es la única manera en que podemos encontrar la información, porque las personas que se encargan de proporcionarnos los datos de interés no conocen la conveniencia de presentar sus datos en formatos abiertos o quizá por el simple hecho de que quieren ser malos con nosotros y ponernos dificultades para realizar análisis a partir de sus datos.\nEn esta entrada de blog vamos a ocuparnos del caso menos malo posible: el caso en el que alguién pasó un archivo de Word a PDF con tablas en el. Estos archivos tienen la ventaja de que respetan cierta estructura y esto permite que la extracción de información sea más sencilla.\nPara esta labor, vamos a extraer datos del Plan estratégico y financiero 2021-2025 de Infonavit, el cual es un documento que trabajó el buen @claudiodanielpc en un hilo parecido al mío, desde el cual extrajo los mismos datos, pero haciendo el proceso en Python."
  },
  {
    "objectID": "posts/2021-05-19-tabulizer-para-tablas-en-pdf/index.html#proceso",
    "href": "posts/2021-05-19-tabulizer-para-tablas-en-pdf/index.html#proceso",
    "title": "Tabulizer para tablas en pdf",
    "section": "Proceso:",
    "text": "Proceso:\nPrimero, instalamos la librería tabulizer:\n\n# Instalamos tabulizer \ninstall.packages(\"tabulizer\") # Para instalar tabulizer en mi compu\n\nSegundo:  Llamamos a las librerías y guardamos la ubicación del archivo del Plan estratégico y financiero 2021-2025 de Infonavit:\n\n# Librerias ---- \n# library(tabulizer) # Para leer tablas en pdf - YA NO DISPONIBLE\nlibrary(tidyverse) # Para manipular datos\n# # Obtenemos la url del Plan del INFONAVIT\n# url &lt;- \"/home/juvenal/Descargas/Plan_Estrategico_y_Financiero_2020-2024.pdf\"\nurl &lt;- \"https://portalmx.infonavit.org.mx/wps/wcm/connect/67e528e7-f13d-4dbf-a668-b29a594351c3/Plan_Estrategico_y_Financiero_2020-2024.pdf?MOD=AJPERES&CVID=mYkHiU3\"\n\nTercero:  Ya que tenemos la dirección de nuestro archivo, ahora extraemos los datos que nos interesan. En este caso, queremos los datos de la Tabla 29: Programa operativo Anual 2021 por estado, que se encuentra en la página 113.\n\n\n\n\n\nFig. 1: La tabla de interés en la página 113.\n\n\n# Extraemos la tabla de la página 113\n# tab &lt;- extract_tables(url, \n#                       pages = 113, \n#                       method = \"stream\")\n# NOTA: La función extract_tables ya no está disponible\n\nDel chunk de código de arriba podemos ver que la función para extraer tablas es la función extract_tables(), la cual recibe como primer argumento la ubicación del archivo, la página que contiene la tabla y el método de extracción de los datos.\nLa función provee de dos métodos distintos para realizar la extracción de la información: el método stream, el algoritmo de extracción básico de tabula, el método lattice, el algoritmo de extracción de hojas de cálculo de tabula, y el método decide, que escoge, por página, el método más apropiado de los dos anteriores. Todos los argumentos de la función se pueden consultar en la documentación de dicha función. Otro argumento interesante es el argumento area, el cual permite al usuario seleccionar las coordenadas del documento en las cuales quiere que se enfoque el algoritmo para la extracción de información.\nEn este caso, el algoritmo lattice extraía solamente los datos de los renglones que no tenían el fondo blanco, por lo que nos proporcionaba solamente la mitad de la información; por eso, tras prueba y error se decidió que el método ideal era el método que usaba el algoritmo stream.\nCuarto:  Ya con los datos extraídos dentro del objeto tab, aprovechamos los patrones de su estructura para poder darles una forma de tabla estructurada.\nEn el último paso, vamos a romper la columna 6 para dividirla en 4 columnas adicionales a partir de los espacios guardados en cada celda. Para esto utilizamos la función tidyr::separate().\n\n# Generamos la tabla: \n# matriz &lt;- tab[[1]] %&gt;% # Nos quedamos con la tabla\n#   as.tibble() %&gt;% # Convertimos a tibble\n#   filter(V1 != \"\") %&gt;% # Filtramos los renglones en blanco\n#   slice(-1) %&gt;% # quitamos el primer renglón\n#   separate(V6, \n#            into = c(\"V6\", \"V7\", \"V8\", \"V9\"), \n#            sep = \"\\\\s\") # Separamos la columna 6 en 4 columnas mas\n# Utilizando el espacio.\n# NOTA: Depende de tabulizer que ya no está disponible\n\nAhora, vamos a renombrar las columnas a los nombres que vienen en el documento original.\n\n# Le metemos los nombres personalizados (que signifiquen algo para nosotros)\n# names(matriz) &lt;- c(\"Entidad\", \n#                    \"Nueva\", \n#                    \"Existente\", \n#                    \"No Hipotecarios\", \n#                    \"Total\", \n#                    \"Infonavit\", \n#                    \"Entidades Financieras\", \n#                    \"No-hipotecarias\", \n#                    \"Total (Derrama de Crédito)\")\n\n# Convertimos las columnas a numero\n# matriz[,2:9] &lt;- lapply(matriz[,2:9], function(x){\n#   x %&gt;% \n#     str_remove_all(pattern = \",\") %&gt;% # Le quitamos las comas\n#     as.numeric() # Lo convertimos a numero\n# })\n# NOTA: Depende de tabulizer que ya no está disponible\n\nY ya, finalmente armamos la gráfica utilizando código de ggplot().\n\n# Armamos las grafica de porcentaje de créditos por entidad:\n# Generamos la base de datos a graficar\nbd_plot &lt;- matriz %&gt;% \n  select(Entidad,Nueva) %&gt;% \n  filter(Entidad != \"Nacional\") %&gt;% \n  mutate(Pctje = 100*Nueva/sum(Nueva)) %&gt;% \n  arrange(-Pctje) \n# Hacemos la gráfica\nbd_plot %&gt;% \n  ggplot(aes(x = reorder(Entidad, Pctje), y = Pctje)) + \n  geom_col(fill = \"orange\") + \n  coord_flip() + \n  geom_label(aes(label = paste0(round(Pctje,1), \"%\")), \n             hjust = -0.05) + \n  scale_y_continuous(expand = expansion(c(0,0.3), 0)) + \n  labs(y = \"\", x = \"\", \n       title = \"Porcentaje del total de Créditos para adquisición de vivienda nueva\\npor Entidad Federativa, 2021\", \n       caption = \"Fuente: Plan Estratégico y Financiero 2021-2025. INFONAVIT. \") +\n  theme_minimal() + \n  theme(plot.title = element_text(hjust = 0.5), \n        panel.background = element_blank(), \n        panel.grid = element_blank(),\n        axis.text.x = element_blank())\n\n\nFinalmente, concluí el hilo con el siguiente mensaje:\n\nY listo. Con este hilo, quiero mostrar que muchas de las tareas sencillas de esto del manejo de los datos se pueden hacer de manera sencilla tanto en #Rstats como en #Python, y que los pasos son prácticamente los mismos, solo cambia la sintaxis. :P Ese es todo el hilo. Si andan sin quehacer y quieren repasar sus conocimientos de importar tablas de pdf, de dplyr o de hacer gráficas de barras en R, en este enlace esta el código completo:\n\nhttps://github.com/JuveCampos/juveBlog/blob/master/tabula/recreandoTablaDanielPC.R\n\nOtras librerías para tratar con datos en pdf.\nEl ejemplo de esta entrada de blog es algo muy sencillo; cada pdf es es distinto y dependiendo de su calidad, de su estructura y de la complejidad de su estructura va a ser la dificultad a la que nos vamos a enfrentar tratando de extraerle información.\nOtras librerías/paquetes de R muy útiles para lidiar con la extracción de datos provenientes de pdfs son la librería pdftools y la librería tesseract (o al menos son las que yo conozco). La primera es buena cuando la información que queremos extraer es información de texto, mientras que la segunda cuenta con un algoritmo de reconocimiento óptico de caracteres para leer texto de pdfs escaneados (muy utilizados por parte de oficinas de gobierno, especialmente cuando responden solicitudes de información) o texto proveniente de imagenes.\n\n\nEn conclusión\nMas que una guía para extraer datos de pdfs, esta entrada tuvo el propósito de guardar, para futuras referencias, el proceso que llevé a cabo a principios de año con el documento de infonavit; de todos modos, espero que sirva como punto de partida para aquellas personas que estan empezando a usar R y de repente se topan con datos en estos formatos, para personas que quieran implementar procesos de extracción de datos con métodos replicables y para personas que quieran experimentar con alternativas a los programas comerciales para lidiar con pdfs (como iLovePDF o textSniper).\nQuedo al pendiente sobre dudas y observaciones al presente contenido; igualmente, si conocen alguna librería adicional, no duden en compartirla conmigo en mis redes :9\n¡Saludos!\n–Juvenal"
  },
  {
    "objectID": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html",
    "href": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html",
    "title": "Tutorial de mapas en Leaflet",
    "section": "",
    "text": "La librería leaflet forma parte de la familia de librerías de los htmlwidgets, y su principal función es la de poder realizar mapas interactivos utilizando lenguaje R. Esta librería traduce nuestros comandos de R a JavaScript, creando una página web con elementos de información geográfica (como puntos, líneas o polígonos), fondos georreferenciados y funciones añadidas (como funciones de interacción con los elementos geográficos o aplicar zoom a zonas de interés)."
  },
  {
    "objectID": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#librerias.",
    "href": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#librerias.",
    "title": "Tutorial de mapas en Leaflet",
    "section": "1. Librerias.",
    "text": "1. Librerias.\nLas librerias necesarias para correr este ejemplo son las siguientes:\n\nlibrary(leaflet)      # libreria para graficar mapas interactivos\nlibrary(sf)           # manejo de informacion geografica \nlibrary(viridis)      # paletas de colores\nlibrary(RColorBrewer) # mas paletas de colores\nlibrary(dplyr)        # manejo de bases de datos\nlibrary(htmlwidgets)  # para guardar el mapa como HTML"
  },
  {
    "objectID": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#abrimos-el-archivo-shape",
    "href": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#abrimos-el-archivo-shape",
    "title": "Tutorial de mapas en Leaflet",
    "section": "2. Abrimos el archivo shape",
    "text": "2. Abrimos el archivo shape\nPara el manejo de informacion espacial utilizaremos el paquete sf, el cual tiene funciones para abrir bases de datos geográficas.\nEl formato del archivo seleccionado es el *.geojson por sus ventajas de almacenamiento y organización, sin embargo, la función siguiente funciona exactamente igual utilizando archivos *.shp\n\n# root &lt;- \"la direccion donde esta mi shapefile\"\nshape &lt;- st_read(paste0(root, \"/Sin_islas.geojson\"))\n\nReading layer `Sin_islas' from data source \n  `https://raw.githubusercontent.com/JuveCampos/MexicoSinIslas/master/Sin_islas.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 32 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -117.1264 ymin: 14.53401 xmax: -86.74038 ymax: 32.71877\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#generamos-variables-ficticias",
    "href": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#generamos-variables-ficticias",
    "title": "Tutorial de mapas en Leaflet",
    "section": "3. Generamos variables ficticias",
    "text": "3. Generamos variables ficticias\nCon tal de asignarle un color a los poligonos de los estados de la republica crearemos variables ficticias; le generaremos un numero aleatorio a cada estado y una categoria en base a dicho numero.\n\nset.seed(1234)\n\n# Variable numerica\nshape$numerica &lt;- runif(nrow(shape), min = 0, max = 1)\n\n# Variable categorica\nshape$categorica &lt;- case_when(shape$numerica &lt; 0.25 ~ \"Estado feo\", \n                              shape$numerica &gt;= 0.25 & shape$numerica &lt; 0.5 ~ \"Estado regular\", \n                              shape$numerica &gt;= 0.5 & shape$numerica &lt; 0.75 ~ \"Estado bonito\", \n                              shape$numerica &gt;= 0.75 ~ \"Estado hermoso\")\n#"
  },
  {
    "objectID": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#generamos-las-paletas-para-colorear-los-mapas",
    "href": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#generamos-las-paletas-para-colorear-los-mapas",
    "title": "Tutorial de mapas en Leaflet",
    "section": "4. Generamos las paletas para colorear los mapas",
    "text": "4. Generamos las paletas para colorear los mapas\nLas paletas son vectores de colores con los cuales vamos a colorear el mapa. Las funciones que el paquete Leaflet provee son las siguientes:\n\ncolorNumeric()\n\ncolorNumeric(palette, domain, na.color = \"#808080\", alpha = FALSE,   reverse = FALSE)\n\nEsta funcion nos permite crear paletas de colores para variables o atributos que tengan valores numericos. Nos generara igualmente una escala de colores continua.\n\n\ncolorBin()\n\ncolorBin(palette, domain, bins = 7, pretty = TRUE, na.color = \"#808080\",   alpha = FALSE, reverse = FALSE)\n\nEsta funcion nos ayuda para crear paletas de colores donde automaticamente separa los valores de la variable numerica en rangos o bins (botecitos), generando una escala con valores discretos, en vez de continuos como hacia la funcion previa.\n\n\ncolorQuantile()\n\ncolorQuantile(palette, domain, n = 4, probs = seq(0, 1, length.out = n + 1),   na.color = \"#808080\", alpha = FALSE, reverse = FALSE)\n\nEsta funcion nos permite crear paletas de colores donde podemos separar la informacion en los cuantiles que especifiquemos previamente. Sirve para ver quienes se ubican en las partes inferiores y superiores de una escala numerica y de esta manera emitir juicios sobre la informacion.\n\n\ncolorFactor()\n\ncolorFactor(palette, domain, levels = NULL, ordered = FALSE,   na.color = \"#808080\", alpha = FALSE, reverse = FALSE)\n\nEsta funcion crea paletas de colores mediante el uso de variables categoricas (factores en R), donde asigna un color diferente a cada categoria de informacion.\n\npalnumeric &lt;- colorNumeric(\"viridis\", domain = shape$numerica)\npalBin &lt;- colorBin(\"magma\", domain = shape$AREA, bins = 4)\npalQuantile &lt;- colorQuantile(\"Spectral\", domain = shape$numerica)\npalfac &lt;- colorFactor(\"RdBu\", domain = shape$categorica)"
  },
  {
    "objectID": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#generamos-el-popup",
    "href": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#generamos-el-popup",
    "title": "Tutorial de mapas en Leaflet",
    "section": "5. Generamos el popup",
    "text": "5. Generamos el popup\nEl popup es la ventana que se muestra al hacer click en un poligono del mapa. En este caso, queremos que al hacer click en un estado, se muestren cosas como el area, el numero aleatorio que le toco y que tan bonito es.\nLa parte encerrada con los caracteres \"&lt;b&gt;\" y \"&lt;/b&gt;\" seran mostradas en negritas en el mapa, mientras que al introducir \"&lt;br&gt;\" se hara un corte de la oracion. Estos caracteres se les denomina como html tags y los presentados aqui son un ejemplo de varios que pueden utilizarse para los mapas de leaflet.\n\n# Funcion hecha en casa para mostrar los decimales que queremos: \nspecify_decimal &lt;- function(x, k) trimws(format(round(x, k), nsmall=k))\n\n# Elaboracion del popup: \n\npopup &lt;- paste0(\n\"&lt;b&gt;\",\"Nombre estado: \",   \"&lt;/b&gt;\",   as.character(shape$ENTIDAD) ,        \"&lt;br&gt;\",                     \n\"&lt;b&gt;\", \"Capital: \",        \"&lt;/b&gt;\",   as.character(shape$CAPITAL)   ,      \"&lt;br&gt;\",                   \n\"&lt;b&gt;\", \"Area: \",           \"&lt;/b&gt;\",   specify_decimal(shape$AREA,3) ,      \"&lt;br&gt;\", \n\"&lt;b&gt;\", \"Num. Aleatorio \",  \"&lt;/b&gt;\",   specify_decimal(shape$numerica ,3) , \"&lt;br&gt;\",\n\"&lt;b&gt;\", \"Tipo de Estado: \", \"&lt;/b&gt;\",   shape$categorica ,                   \"&lt;br&gt;\" )"
  },
  {
    "objectID": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#elaboramos-el-mapa",
    "href": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#elaboramos-el-mapa",
    "title": "Tutorial de mapas en Leaflet",
    "section": "6. Elaboramos el mapa",
    "text": "6. Elaboramos el mapa\nA continuacion elaboraremos el mapa usando la libreria leaflet.\n\n# Funcion para crear el mapa\nleaflet(shape) %&gt;%\n  # Opcion para anadir imagenes o mapas de fondo (tiles)\n  addProviderTiles(\"Esri.WorldTerrain\") %&gt;%\n  # Funcion para agregar poligonos\n  addPolygons(color = \"#444444\" ,\n              weight = 1, \n              smoothFactor = 0.5,\n              opacity = 1.0,\n              fillOpacity = 0.5,\n              fillColor = ~palnumeric(shape$numerica),    # Color de llenado\n              layerId = ~shape$CVE_EDO,                  \n              highlightOptions = highlightOptions(color = \"white\", weight = 2,\n                                                  bringToFront = TRUE), #highlight cuando pasas el cursor\n              label = ~shape$ENTIDAD ,                                  # etiqueta cuando pasas el cursor\n              labelOptions = labelOptions(direction = \"auto\"),\n              popup = popup) %&gt;%                                        # mostrar el popup\n  \n  addLegend(position = \"topright\", pal = palnumeric, values = ~shape$numerica,\n            title = \"Suerte del Estado\")                                # mostrar escala en el mapa"
  },
  {
    "objectID": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#mapa-multicapa.",
    "href": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#mapa-multicapa.",
    "title": "Tutorial de mapas en Leaflet",
    "section": "7. Mapa multicapa.",
    "text": "7. Mapa multicapa.\nPara finalizar, haremos un mapa multicapa con toda la informacion que hemos generado hasta el momento, esto es, que despliegue informacion de distintas variables al seleccionar estas en el mapa.\n\nmapa &lt;- leaflet(shape) %&gt;%\n  addProviderTiles(\"Esri.WorldTerrain\") %&gt;%\n  addPolygons(color = \"#444444\" ,\n              weight = 1, \n              smoothFactor = 0.5,\n              opacity = 1.0,\n              fillOpacity = 0.5,\n              fillColor = ~palfac(shape$categorica),\n              group = \"Belleza\",\n              highlightOptions = highlightOptions(color = \"white\", weight = 2,\n                                                  bringToFront = TRUE),\n              label = ~shape$ENTIDAD ,\n              labelOptions = labelOptions(direction = \"auto\"),\n              popup = popup) %&gt;%\n  \n   addLegend(position = \"bottomleft\", pal = palfac, values = ~shape$categorica,\n             title = \"Belleza del Estado\") %&gt;%\n  \n  addPolygons(data = shape, \n              color = \"#444444\" ,\n              weight = 1, \n              smoothFactor = 0.5,\n              opacity = 1.0,\n              fillOpacity = 0.5,\n              fillColor = ~palnumeric(shape$numerica),\n              group = \"Suerte\",\n              highlightOptions = highlightOptions(color = \"white\", weight = 2,\n                                                  bringToFront = TRUE),\n              label = ~shape$ENTIDAD ,\n              labelOptions = labelOptions(direction = \"auto\"),\n              popup = popup) %&gt;%\n  \n  addPolygons(data = shape, \n              color = \"#444444\" ,\n              weight = 1, \n              smoothFactor = 0.5,\n              opacity = 1.0,\n              fillOpacity = 0.5,\n              fillColor = ~palQuantile(shape$numerica),\n              group = \"Porcentaje\",\n              highlightOptions = highlightOptions(color = \"white\", weight = 2,\n                                                  bringToFront = TRUE),\n              label = ~shape$ENTIDAD ,\n              labelOptions = labelOptions(direction = \"auto\"),\n              popup = popup) %&gt;%\n  \n  addLegend(position = \"bottomright\", pal = palQuantile, values = ~shape$numerica,\n            title = \"Cuantiles de Suerte\") %&gt;%\n  \n  \n  addPolygons(data = shape, \n              color = \"#444444\" ,\n              weight = 1, \n              smoothFactor = 0.5,\n              opacity = 1.0,\n              fillOpacity = 0.5,\n              fillColor = ~palBin(shape$AREA),\n              group = \"Area\",\n              highlightOptions = highlightOptions(color = \"white\", weight = 2,\n                                                  bringToFront = TRUE),\n              label = ~shape$ENTIDAD ,\n              labelOptions = labelOptions(direction = \"auto\"),\n              popup = popup) %&gt;%\n  \n  addLegend(position = \"topleft\", pal = palBin, values = ~shape$AREA,\n            title = \"Areas\") %&gt;%\n  \n  addLayersControl( \n    baseGroups = c(\"Belleza\", \"Suerte\", \"Porcentaje\", \"Area\")) %&gt;%\n\n  addLegend(position = \"topright\", pal = palnumeric, values = ~shape$numerica,\n          title = \"Suerte del Estado\") \n\n# Imprimir el mapa\nmapa"
  },
  {
    "objectID": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#guardamos-el-archivo.",
    "href": "posts/2020-01-13-tutorial-de-mapas-en-leaflet/index.html#guardamos-el-archivo.",
    "title": "Tutorial de mapas en Leaflet",
    "section": "8. Guardamos el archivo.",
    "text": "8. Guardamos el archivo.\nPara guardar el archivo haremos uso de la libreria htmlwidgets.\n\n# Gardar el mapa \nhtmlwidgets::saveWidget(mapa, \"mapa.html\")"
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html",
    "title": "Mi post sobre blogdown",
    "section": "",
    "text": "Esta entrada de blog trata de explicar algunas generalidades sobre la creación y publicación de páginas web estilo blog a traves del uso de la librería blogdown de R."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#tl-dr",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#tl-dr",
    "title": "Mi post sobre blogdown",
    "section": "",
    "text": "Esta entrada de blog trata de explicar algunas generalidades sobre la creación y publicación de páginas web estilo blog a traves del uso de la librería blogdown de R."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#motivación",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#motivación",
    "title": "Mi post sobre blogdown",
    "section": "Motivación",
    "text": "Motivación\nUno de los temas más comunes entre aquellas personas que escriben blogs de R es, precisamente, como crear blogs en R. Además, he visto tantos ultimamente, que decidí escribir mi propio post sobre blogdown con mi experiencia utilizando la librería para generar blogs temáticos sobre R, sobre como construí el mio y algunos tips y consejos después de un año creando y gestionando mi página con esta librería."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#importancia-de-tener-un-sitio-personal",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#importancia-de-tener-un-sitio-personal",
    "title": "Mi post sobre blogdown",
    "section": "Importancia de tener un sitio personal",
    "text": "Importancia de tener un sitio personal\nUn sitio personal es una página web en la cual subimos contenido acerca de nosotros, de nuestro trabajo y de las cosas que nos gustan.\nEn su curso, The personal website playbook, Tom Hirst nos da algunas de las ventajas de porque es conveniente contar con un sitio personal:\n\nPresentarnos efectivamente: nuestros intereses, nuestros proyectos, nuestras ideas y nuestra historia. Una página web consiste de un gran espacio para expresarnos y comunicarnos.\nIncrementar nuestra visibilidad en línea. Un sitio web bien diseñado puede ser una parte integral de nuestra estrategia comercial (si tenemos alguna).\nPresentar los servicios y productos que ofrecemos:  en caso de que los tengamos a la venta, podemos generar un catálogo con estos y ponerlo disponible 24/7.\nPracticar nuestras habilidades de comunicación al estar escribiendo contenido para este sitio.\nEs el CV moderno. Nos permite destacar y diferenciarnos de la competencia (que no tiene su propia página).\nConsiste en un repositorio de documentos, tutoriales archivos y bases de datos útiles tanto para nosotros como para personas a las que podamos ayudar después. Tiene sus ventajas respecto a nuestros perfiles de Redes Sociales al darle más orden y estructura a nuestros contenidos, además de no vernos limitados por el espacio que nos dan para realizar publicaciones."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#qué-es-rmarkdown",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#qué-es-rmarkdown",
    "title": "Mi post sobre blogdown",
    "section": "¿Qué es RMarkdown?",
    "text": "¿Qué es RMarkdown?\nRMarkdown es la combinación del lenguaje de marcado Markdown combinado con las capacidades del lenguaje de programación R para analizar y visualizar datos.\n\n\n\n\nFig. 2. RMarkdown como la combinación de R y Markdown.\n\n\nAl combinar ambos lenguajes tenemos la capacidad de crear una gran cantidad de documentos, que van desde una página web básica en HTML hasta documentos *.pdf (con ayuda de LaTeX), documentos de Word, presentaciones de diapositivas (Xaringan), libros electrónicos (bookdown) y, por supuesto, blogs personales.\n\n\n\n\nFig. 2. Documentos y programas que trabajan con RMarkdown.Fuente: RStudio.\n\nPersonalmente, considero que aprender RMarkdown es una habilidad muy importante entre aquellos aspirantes a analistas de datos, científicos de datos y econometristas que han escogido el lenguaje R como su herramienta de trabajo; nos ofrece una herramienta de comunicación altamente versatil, nos obliga a trabajar de manera reproducible, a escribir mejor código y es la puerta de entrada a otro tipo de habilidades muy útiles, como la creación y la estructura de páginas web y a aprender CSS.\nPara que los artículos que generes en tu blog se vean lo más bonitos posible, primero hay que aprender a utilizar RMarkdown. Posiblemente en el LNPP abramos un curso pronto, pero por ahora, puedes aprender lo básico en este tutorial chiquito que hice alguna vez para mi otro blog :9 o en algun curso en línea (como este)."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#blogdown",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#blogdown",
    "title": "Mi post sobre blogdown",
    "section": "Blogdown",
    "text": "Blogdown\nEl paquete Blogdown es el paquete de R creado para generar sitios web estáticos personalizables en Markdown.\nEntre las ventajas que ofrece estan las siguientes:\n\nPodemos incluir y ejecutar código de R(o de cualquier otro lenguaje de programación soportado por el paquete knit, como Python).\nAutomáticamente nos genera (renderiza) resultados como gráficas, tablas, resultados de análisis estadísticos y widgets de HTML.\nNos permite incluir citaciones, pies de página y ecuaciones LaTeX, así como código HTML en caso de que necesitemos cosas más particulares.\n\n\nInstalación\nEste paquete se encuentra disponible en el CRAN. Se puede instalar con el siguiente código:\n\ninstall.packages(\"blogdown\")\n\nIgualmente, la versión de desarrollo se puede descargar con el siguiente código:\n\nremotes::install_github('rstudio/blogdown')"
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#por-qué-usar-blogdown",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#por-qué-usar-blogdown",
    "title": "Mi post sobre blogdown",
    "section": "¿Por qué usar blogdown?",
    "text": "¿Por qué usar blogdown?\nLas ventajas de blogdown con respecto a otros servicios (como wordpress o publicar en medium) consisten prácticamente en tres cosas:\n\nFacilita la inclusión de código de R. Al estar basado en R, le da el formato correcto al código que publiquemos. Igualmente, como en cualquier documento de RMarkdown, genera y ejecuta código en su propio ambiente, por lo que no tenemos que preocuparnos por estar pegando por separado los resultados de ejecutar ciertos bloques de código.\nEs gratuito. Ventajas de ser Open Source.\nTe permite empezar a trabajar desde ya en tu sitio web. Solo se necesita descargar el paquete."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#en-que-casos-usar-blogdown",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#en-que-casos-usar-blogdown",
    "title": "Mi post sobre blogdown",
    "section": "En que casos usar blogdown",
    "text": "En que casos usar blogdown\nPersonalmente, creo que utilizar la librería blogdown es un buen ejercicio para aquellos programadores de R que deseen publicar cosas (como visualizaciones o tutoriales) dado que las herramientas del paquete nos facilitan bastante el trabajo.\nTambién podría ser útil para alguien que solo quiere experimentar y montar un pequeño blog y quiere hacerlo rápido y gratis, e irlo mejorarlo sobre la marcha.\nSin embargo, para sitios web más complejos o para publicaciones de blog de otro tipo de temas, quizá convenga explorar soluciones de mercado (como Wordpress o Medium) las cuales pueden proveer de más herramientas a los autores, como añalisis de tráfico, instalación de plugins, generación de tiendas de e-commerce, entre muchas otras ventajas de los servicios modernos y programados por alguien más."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#framework-hugo",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#framework-hugo",
    "title": "Mi post sobre blogdown",
    "section": "Framework Hugo",
    "text": "Framework Hugo\nPor default, el paquete blogdown usa Hugo, un generador de sitios estáticos open-source, el cual provee una manera rápida y flexible de generar el contenido de tu sitio y de compartirlo en línea.\nSegún su repositorio en línea, Hugo está optimizado para ser rápido, fácil de usar y ser altamente configurable. Hugo toma un directorio con contenido compatible y lo convierte en código HTML listo para ser publicado en la web.\nCuando se utiliza en blogdown, instalamos Hugo desde RStudio (por lo que no debemos preocuparnos tanto por entenderlo en un principio).\nPara revisar los temas disponibles para generar nuestros blogs, podemos consultar el enlace de temas disponibles para Hugo: https://themes.gohugo.io y ver cual nos agrada más.\nEl código fuente de Hugo se puede consultar en este repositorio: https://github.com/gohugoio/hugo\nPara instalar Hugo y tenerlo listo en nuestra sesión de RStudio, lo hacemos con el siguiente código:\n\nblogdown::install_hugo()"
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#parte-técnica",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#parte-técnica",
    "title": "Mi post sobre blogdown",
    "section": "Parte técnica:",
    "text": "Parte técnica:\n\nPara hacer menos pesada esta entrada, decidí mover toda la parte técnica (entendiendo como parte técnica donde trabajamos con RStudio) al siguiente enlace: https://juvenalcampos.com/2021/08/01/generando-un-blog-y-más-cosas-técnicas/"
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#donde-publicar-mi-blog",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#donde-publicar-mi-blog",
    "title": "Mi post sobre blogdown",
    "section": "¿Donde Publicar mi blog?",
    "text": "¿Donde Publicar mi blog?\nPublicar el blog consiste en poner a disposición todo el contenido de la página web. Para publicar la página en línea, los dos servicios más comunes son Github Pages y Netlify. Podemos usar una de las dos, o ambas.\n\nGithub Pages es un servicio de Github que permite construir una página web a partir de un repositorio de código. Para esto, tenemos que generar un repositorio y después cargar, en dicho repositorio, todo el código necesario para generar la página y configurar el repositorio para que muestre este contenido.\nPor su parte, Netlify es una compañía que ofrece servicios de computación en la nube para el almacenamiento de aplicaciones web y sitios estáticos (como un blog). Uno de sus servicios consiste en proveer almacenamiento (host) a páginas web almacenadas a través de un control de versiones Git, por lo que, al igual que el servicio anterior, nos permite almacenar páginas donde el código está almacenado en repositorios de Github.\nLa ventaja de Netlify sobre Github Pages radica en que Netlify corre Hugo desde sus servidores, por lo que disminuye los tiempos de carga de la página.\nOtra ventaja es que Netlify nos puede ayudar a gestionar la compra de dominios (direcciones web), por lo que si queremos que nuestra página tenga su dominio personalizado, lo podemos obtener/comprar de forma sencilla desde este servicio.\nNota: De ambos servicios se desprende el hecho de que el hosteo se tiene que realizar desde un repositorio de Github; esto tiene la ventaja de que todos los sitios web construidos con esta librería tienen el código disponible en línea y, si queremos, podemos descargar el código que los genera en nuestras computadoras."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#algunos-ejemplos",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#algunos-ejemplos",
    "title": "Mi post sobre blogdown",
    "section": "Algunos ejemplos:",
    "text": "Algunos ejemplos:\nAlgunos ejemplos de blogs construidos con la librería blogdown son los siguientes:\n\nBlog de Yihui Xie (creador de la librería)\nRStudio blog\nRViews blog\nSimplystatistics.\nRob Hyndman.\nKarl Broman.\nIsabella Benabaye\nJuvenal Campos (yo mero)."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#referencias",
    "href": "posts/2021-07-18-mi-post-sobre-blogdown/index.html#referencias",
    "title": "Mi post sobre blogdown",
    "section": "Referencias:",
    "text": "Referencias:\nPara escribir esta entrada, tomé como referencia las siguientes publicaciones (además de mi experiencia personal).\n\nLibrería de Github: https://github.com/rstudio/blogdown\nTemas de Hugo: https://themes.gohugo.io\nLibro de blogdown: https://bookdown.org/yihui/blogdown/\nPreguntas y ayuda en stackoverflow: https://stackoverflow.com/questions/tagged/blogdown\nArtículo en español de Rubén Casal: https://rubenfcasal.github.io/post/creación-de-sitios-web-con-blogdown/\nBlogdown en 2021: https://alison.rbind.io/blog/2020-12-new-year-new-blogdown/\nPágina personal: https://pamepairo.netlify.app/post/7-12-2020-motivos-pagina-web/\nWebs con Rmarkdown: https://paocorrales.github.io/post/webs-con-rmarkdown/\nWikipedia de Netlify: https://es.wikipedia.org/wiki/Hugo_(software)\nCurso The personal website playbook de Tom Hirst. Clase 01. https://www.tomhirst.com/products/personal-website-playbook/"
  },
  {
    "objectID": "posts/2022-03-10-scrap-memes/index.html",
    "href": "posts/2022-03-10-scrap-memes/index.html",
    "title": "Scrap de Memes en R",
    "section": "",
    "text": "En este post vamos a aprender a hacer web scraping de memes de Twitter usando R. Utilizaremos las librerías rvest para el scraping y rtweet para interactuar con la API de Twitter.\n\n\n\nMemes scraped from Twitter"
  },
  {
    "objectID": "posts/2022-03-10-scrap-memes/index.html#introducción",
    "href": "posts/2022-03-10-scrap-memes/index.html#introducción",
    "title": "Scrap de Memes en R",
    "section": "",
    "text": "En este post vamos a aprender a hacer web scraping de memes de Twitter usando R. Utilizaremos las librerías rvest para el scraping y rtweet para interactuar con la API de Twitter.\n\n\n\nMemes scraped from Twitter"
  },
  {
    "objectID": "posts/2022-03-10-scrap-memes/index.html#librerías-necesarias",
    "href": "posts/2022-03-10-scrap-memes/index.html#librerías-necesarias",
    "title": "Scrap de Memes en R",
    "section": "Librerías necesarias",
    "text": "Librerías necesarias\n\nlibrary(rvest)\nlibrary(rtweet)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "posts/2022-03-10-scrap-memes/index.html#proceso-de-scraping",
    "href": "posts/2022-03-10-scrap-memes/index.html#proceso-de-scraping",
    "title": "Scrap de Memes en R",
    "section": "Proceso de scraping",
    "text": "Proceso de scraping\nEl proceso incluye:\n\nConfiguración de la API de Twitter\nBúsqueda de tweets con memes\nExtracción de imágenes\nAnálisis de patrones\n\n\nConfiguración inicial\n\n# Configurar credenciales de Twitter API\nauth_setup_default()\n\n# Términos de búsqueda para memes\nmeme_terms &lt;- c(\"meme\", \"momo\", \"funny\", \"humor\")\n\n\n\nBúsqueda y extracción\n\n# Buscar tweets con memes\ntweets_memes &lt;- search_tweets(\n  q = paste(meme_terms, collapse = \" OR \"),\n  n = 1000,\n  include_rts = FALSE,\n  type = \"popular\"\n)\n\n# Filtrar tweets con imágenes\ntweets_with_images &lt;- tweets_memes %&gt;%\n  filter(!is.na(media_url))"
  },
  {
    "objectID": "posts/2022-03-10-scrap-memes/index.html#análisis-de-resultados",
    "href": "posts/2022-03-10-scrap-memes/index.html#análisis-de-resultados",
    "title": "Scrap de Memes en R",
    "section": "Análisis de resultados",
    "text": "Análisis de resultados\nLos memes más populares suelen tener:\n\nMayor engagement (likes + retweets)\nTiming específico (fines de semana, noches)\nTemas trending del momento\n\n\n\n\n\n\n\nConsideraciones éticas\n\n\n\nRecuerda respetar los términos de servicio de Twitter y los derechos de autor de las imágenes al hacer scraping."
  },
  {
    "objectID": "posts/2022-03-10-scrap-memes/index.html#visualización",
    "href": "posts/2022-03-10-scrap-memes/index.html#visualización",
    "title": "Scrap de Memes en R",
    "section": "Visualización",
    "text": "Visualización\n\n# Gráfica de engagement por hora\ntweets_memes %&gt;%\n  mutate(hour = hour(created_at)) %&gt;%\n  group_by(hour) %&gt;%\n  summarise(\n    avg_likes = mean(favorite_count, na.rm = TRUE),\n    avg_rts = mean(retweet_count, na.rm = TRUE)\n  ) %&gt;%\n  ggplot(aes(x = hour)) +\n  geom_line(aes(y = avg_likes, color = \"Likes\")) +\n  geom_line(aes(y = avg_rts, color = \"Retweets\")) +\n  labs(\n    title = \"Engagement de memes por hora del día\",\n    x = \"Hora\",\n    y = \"Promedio\",\n    color = \"Métrica\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "posts/2022-03-10-scrap-memes/index.html#conclusiones",
    "href": "posts/2022-03-10-scrap-memes/index.html#conclusiones",
    "title": "Scrap de Memes en R",
    "section": "Conclusiones",
    "text": "Conclusiones\nEl scraping de memes nos permite entender:\n\nPatrones de humor en redes sociales\nMomentos de mayor actividad\nTemas que generan más engagement\n\n\n\n\n\n\n\nCódigo completo\n\n\n\nEl código completo está disponible en mi repositorio de GitHub.\n\n\n\n¿Te gustó este tutorial? ¡Sígueme en Twitter @JuvenalCamposF para más contenido de R!"
  },
  {
    "objectID": "posts/2020-12-04-pivoteando-bases/index.html",
    "href": "posts/2020-12-04-pivoteando-bases/index.html",
    "title": "Pivoteando bases: breve tutorial de pivot_longer y pivot_wider",
    "section": "",
    "text": "Las tablas consisten en una disposición de datos en un arreglo matricial de filas y columnas. Estas tablas pueden mostrar su información de distintas maneras, dependiendo de la información que se quiere mostrar, las unidades de análisis u observación que la componen, la temporalidad de la información que incluyen, el numero de variables que incorporan, etc.\nEn el uso de R, las arreglos tabulares son ina de las piezas centrales del análisis y manejo de información: es el arreglo de información que conforma a las tibbles y a los data.frames, a partir de los cuales realizamos nuestros análisis, corremos nuestros modelos o hacemos gráficas y visualizaciones.\nDada su importancia en este lenguaje de programación, en el presente texto, vamos a repasar dos de las formas principales en las cuales podemos organizar nuestra información dentro de tablas (formato largo y formato ancho), las ventajas que tienen cada una de esas formas, y finalmente, veremos un ejemplo rápido de la aplicación de las funciones que nos permiten pasar de un tipo de formato al otro."
  },
  {
    "objectID": "posts/2020-12-04-pivoteando-bases/index.html#argumentos",
    "href": "posts/2020-12-04-pivoteando-bases/index.html#argumentos",
    "title": "Pivoteando bases: breve tutorial de pivot_longer y pivot_wider",
    "section": "Argumentos",
    "text": "Argumentos\nLa función tidyr::pivot_longer() requiere de los siguientes argumentos para funcionar:\n\nEl argumento data; el objeto tibble o dataframe que vamos a alargar.\nEl argumento cols, que nos pide un vector de las columnas que vamos a alargar."
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html",
    "title": "Distancia Punto a Linea",
    "section": "",
    "text": "La semana pasada, mientras estaba yo muy a gusto en mi trabajo limpiando bases de datos, un amigo mío muy querido (y con quien di un curso hace un par de años) Jesús Carrillo @ProfeTriste me lanzó el siguiente reto:\nFig. 1 Conversación con Jesús\nY pues bueno, al terminar la jornada laboral (obviamente 😉) me dediqué a resolver este reto (porque, si bien tenía la idea, nunca había realizado algo similar).\nY así es como empiezo este tutorial, con una idea sencilla (obtener un metodo para sacar una distancia) que se complicó bastante a medida que redactaba, y terminó siendo un tutorial de manejo de archivos de datos espaciales, elaboración de mapas, creación de funciones y donde al final (como no!) terminé programando un shiny."
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html#paso-1.-descargar-la-información.",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html#paso-1.-descargar-la-información.",
    "title": "Distancia Punto a Linea",
    "section": "Paso 1. Descargar la información.",
    "text": "Paso 1. Descargar la información.\nPrimero había que descargar la información de la frontera norte de México a mi computadora. La primera opción que pensé hacer fué filtrar las líneas superiores de un shape de los estados del país, pero si lo piensas un poco… ¿como podría decirle a R cual es la línea superior de un estado? ¿Seleccionando los puntos más extremos en el eje Y?\nPues tal vez esa podría ser una opción, pero el algoritmo de Googlear la base de la línea de la frontera y descargar la base resultó más efectivo.\nSi eres de los que les dá flojera ir a la página, descargar archivos, ir a la carpeta de Descargas, y mover el archivo a la carpeta de trabajo, puedes copipegar el código que viene a continuación (obviamente, descargando primero el paquete curl del CRAN en tu sesión de R).\n\n# Descarga datos automaticamente, si te da flojera darle cl\ncurl::curl_download(\"https://opendata.arcgis.com/datasets/e735940321bd4383bab528a91bf526f8_0.zip?outSR=%7B%22latestWkid%22%3A3857%2C%22wkid%22%3A102100%7D\",\ndestfile = \"frontera.zip\")\n\nEsto me descargó un archivo *.zip, que yo nombré como frontera.zip, en mi directorio de trabajo. Como ya caducó mi licencia de WinRar 😔 y no puedo descomprimirlo en la computadora, utilizo el siguiente código para extraer la información:\n\n# Deszipeado\nunzip(zipfile = \"frontera.zip\")\n\nUna vez descomprimido, tengo ahora un montón de archivos en mi directorio de trabajo llamados Mexico_and_US_Border con distintas extensiones, tales como *.shp, *.shx o *.dbf. Estos archivos son una de las maneras en que se guardan las bases de datos geográficas (formato shapefile), y estos archivos se pueden abrir desde R con la librería sf.\n\n\nFig. 2 Archivos que conforman en shapefile de la frontera."
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html#paso-2.-abriendo-los-datos.",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html#paso-2.-abriendo-los-datos.",
    "title": "Distancia Punto a Linea",
    "section": "Paso 2. Abriendo los datos.",
    "text": "Paso 2. Abriendo los datos.\nPara abrir la base de datos de la frontera norte, usamos la función sf::st_read() como se ve a continuación:\n\n# Librerias\nlibrary(sf)\nlibrary(tidyverse)\n# Apertura del archivo (solo abrimos el archivo *.shp)\nf &lt;- st_read(\"Mexico_and_US_Border.shp\")\n\nY ya. así lo abrimos. Para corroborar que sea efectivamente un archivo geográfico, lo ploteamos (dibujamos):\n\nNota. Utiliza siempre el argumento max.plot=1 para explorar tus datos (si no, tu compu lo va a pasar muy mal).\n\n\n# Ploteado (te recomiendo que no le muevas al max.plot = 1)\nplot(f, max.plot = 1)\n\n\n\n\n\n\n\n\n\nFig. 3 Polilínea de la frontera norte\n\nEfectivamente, tiene los datos que necesitamos."
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html#definiendo-el-punto.",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html#definiendo-el-punto.",
    "title": "Distancia Punto a Linea",
    "section": "3. Definiendo el punto.",
    "text": "3. Definiendo el punto.\nAhora hay que determinar el punto al cual le vamos a sacar la distancia respecto de la frontera norte: como mi amigo es estudiante del Colmex, vamos a calcular la distancia de El Colegio de México a un punto (el más cercano) a la frontera norte.\nPara sacar las coordenadas del Colmex, lo buscamos en Google Maps, y le picamos encima de la biblioteca para sacar sus coordenadas:\n\n\nFig. 4 Coordenadas del Colmex en Google Maps.\n\nAhora, creamos una tabla que almacene estas coordenadas latitud/longitud:\n\n# Las coordenadas del Colmex en formato tabla-dataframe\npto &lt;- data.frame(x = -99.20775, y = 19.303741) %&gt;% \n  st_as_sf(coords = c(\"x\", \"y\")) \n\n# Homologamos el Sistema de Coordenadas de Referencia con la base de la línea de la Frontera Norte\nst_crs(pto) &lt;- st_crs(f)\n\n\nNota. Cuando se va a trabajar con la interacción de dos bases de datos geográficas, o cuando se van a realizar mapas en leaflet, es siempre necesario homologar el Sistema de Coordenadas de Referencia, escogiendo, en este caso, el 4326 (WGS84)."
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html#calculamos-la-distancia.",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html#calculamos-la-distancia.",
    "title": "Distancia Punto a Linea",
    "section": "4. Calculamos la distancia.",
    "text": "4. Calculamos la distancia.\nAhora calculamos la distancia. La librería/biblioteca/paquetería sf tiene ya pre-programada una función llamada st_distance() para calcular la distancia geodésica que hay entre dos elementos geográficos del mapa. Utilizaremos esta función para calcular la distancia de un punto a la frontera.\n\nst_distance(pto, f) \n\nUnits: [m]\n         [,1]\n[1,] 749514.8\n\n\nY ya, la distancia de El Colmex a el punto más cercano de la frontera norte (quién sabe cual) es de 746.6889 km ( 746,688.9 m).\nY ahí está la respuesta a la distancia, y al reto de mi amigo. Fin."
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html#a-qué-punto-se-calculó-la-distancia",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html#a-qué-punto-se-calculó-la-distancia",
    "title": "Distancia Punto a Linea",
    "section": "5. ¿A qué punto se calculó la distancia?",
    "text": "5. ¿A qué punto se calculó la distancia?\nPero ahora pueden surgir preguntas muy lógicas sobre esta respuesta… Una de ellas es: ¿A qué punto de la frontera se le calculó la distancia?\nEntonces, hagamos el cálculo más detenidamente. Para esto, propongo descomponer la línea de la frontera norte en sus vértices o componentes:\n\n# Descomponemos la linea en sus coordenadas\nptos_linea &lt;- st_coordinates(f) %&gt;%\n  as.data.frame() %&gt;%\n  st_as_sf(coords = c(\"X\", \"Y\")) \n\nst_crs(ptos_linea) &lt;- st_crs(f)\n\nclass(ptos_linea)\n\n[1] \"sf\"         \"data.frame\"\n\nst_crs(ptos_linea)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nY ahora calculamos las distancias del Colmex a todos los vértices de la frontera norte:\n\n# Calculo de las distancias\ndistancias &lt;- st_distance(ptos_linea, pto)\n# Observamos los primeros registros\nhead(distancias)\n\nUnits: [m]\n         [,1]\n[1,] 777903.2\n[2,] 769540.4\n[3,] 769540.5\n[4,] 769537.8\n[5,] 769535.6\n[6,] 769530.3\n\n\nY ahora, sacamos la línea con la menor longitud:\n\n# Obtencion de la distancia minima\ndistancia_minima &lt;- min(distancias) \n\n# En kilometros\n(distancia_minima / 1000) %&gt;% as.numeric()\n\n[1] 749.5148\n\n\nComo podemos ver, la distancia mínima es la misma distancia que calcula la función st_distance(). Ahora, ¿cuál punto de todos esos es el punto más cercano al Colmex? Para conocer esto, filtramos las distancias hasta quedarnos aquella observación que tenga la distancia igual a la distancia mínima.\n\n# Punto minimo\npunto_frontera &lt;- \n  ptos_linea[distancias == distancia_minima,]\n\nY para visualizarlo, creamos una línea que va del Colmex a dicho punto:\n\n# Linea de distancia mínima\nlinea &lt;- st_linestring(matrix(c(pto[,\"geometry\"] %&gt;% \n                              st_coordinates(), \n                              punto_frontera[,\"geometry\"] %&gt;% st_coordinates()), ncol = 2, byrow = TRUE))\n\nY lo plasmamos en un mapa de leaflet:\n\nlibrary(leaflet)\n\n# Hacemos el mapa \nleaflet() %&gt;% \n  addTiles() %&gt;% \n  addCircleMarkers(data = pto) %&gt;% \n  addCircleMarkers(data = punto_frontera) %&gt;% \n  addPolylines(data = linea) %&gt;% \n  addPolylines(data = f, color = \"red\")\n\n\n\n\n\n\nFig. 5 Mapa de la línea con la mínima distancia\n\nY resulta (haciendo zoom podemos darnos cuenta) que el punto más cercano a la frontera norte se encuentra unos kilómetros al Este de la Ciudad de Matamoros, en el Estado de Tamaulipas."
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html#y-si-quiero-calcular-la-distancia-respecto-a-otro-punto",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html#y-si-quiero-calcular-la-distancia-respecto-a-otro-punto",
    "title": "Distancia Punto a Linea",
    "section": "6. ¿Y si quiero calcular la distancia respecto a otro punto?",
    "text": "6. ¿Y si quiero calcular la distancia respecto a otro punto?\nPara hacerlo para cualquier punto de México, hacemos una función. Las funciones son pedazos de código que, entre otras cosas, se programan para llevar a cabo tareas repetitivas (como todo lo que hicimos arriba) variando ciertos datos de entrada. Primero, empezaremos haciendo una función para calcular solamente las distancias a la frontera.\n\n# Función para calcular las distancias. \ndistancia &lt;- function(X, Y){\n  pto &lt;- data.frame(x = X, y = Y) %&gt;% \n          st_as_sf(coords = c(\"x\", \"y\")) \n        st_crs(pto) &lt;- st_crs(f)\n  st_distance(pto, f)       \n}\n\nY ahora, probamos la función a tres puntos seleccionados: a Mexicali, a Puerto Peñasco, Sonora y al CIDE, CDMX.\n\n# Distancia a un punto del mpio de Mexicali, BC\ndistancia(X = -115.418556, Y = 31.795112)\n\nUnits: [m]\n         [,1]\n[1,] 96350.08\n\n# Distancia a Puerto Peñasco, Sonora\ndistancia(X = -113.534104, Y = 31.309766)\n\nUnits: [m]\n        [,1]\n[1,] 82611.5\n\n# Distancia al CIDE\ndistancia(X = -99.263426, Y = 19.374515)\n\nUnits: [m]\n         [,1]\n[1,] 743302.3\n\n# Distancias a todos estos puntos \ndistancia(X = c(-115.418556,-113.534104, -99.263426), \n          Y = c(31.795112, 31.309766, 19.374515))\n\nUnits: [m]\n          [,1]\n[1,]  96350.08\n[2,]  82611.50\n[3,] 743302.29"
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html#y-la-trayectoria-o-línea-de-mínima-distancia",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html#y-la-trayectoria-o-línea-de-mínima-distancia",
    "title": "Distancia Punto a Linea",
    "section": "7. ¿Y la trayectoria o línea de mínima distancia?",
    "text": "7. ¿Y la trayectoria o línea de mínima distancia?\nY ahora, haremos otra función para dibujar las líneas. Esta función va a empaquetar todos los pasos que seguímos para determinar el punto de la frontera al cual llegaba la línea con la distancia mínima.\n\n# Funcion para dibujar las lineas de minima distancia\n# Nota, esta función da por hecho que previamente ya cargamos \n# la base de datos de la frontera y la almacenamos en el objeto f\ndibuja_lineas_minima_distancia &lt;- function(X,Y){\n\n  # Creamos el punto a partir de los argumentos X y Y\n  pto &lt;- data.frame(x = X, y = Y) %&gt;% \n        st_as_sf(coords = c(\"x\", \"y\")) \n\n  # Homologamos el Sistema de Coordenadas de Referencia\n  st_crs(pto) &lt;- st_crs(f)\n  \n  # Extraemos los vértices de la linea\n  ptos_linea &lt;- st_coordinates(f) %&gt;%\n    as.data.frame() %&gt;%\n    st_as_sf(coords = c(\"X\", \"Y\")) \n  \n  # Homologamos el Sistema de Coordenadas de Referencia\n  st_crs(ptos_linea) &lt;- st_crs(f)\n\n  # Sacamos las distancias del punto a todos los vertices de la frontera\n  distancias &lt;- st_distance(ptos_linea, pto)\n\n  # Obtencion de la distancia minima\n  distancia_minima &lt;- min(distancias) \n\n  # Guardamos el punto de la frontera con la distancia minima\n  punto_frontera &lt;&lt;- \n    ptos_linea[distancias == distancia_minima,]\n\n  # Construimos la linea de distancia minima\n  linea &lt;- st_linestring(matrix(c(pto[,\"geometry\"] %&gt;% \n                                st_coordinates(), \n                                punto_frontera[,\"geometry\"] %&gt;%       st_coordinates()), ncol = 2, byrow = TRUE))  \n  \n  # Seleccionamos la linea como objeto a retornar de la funcion \n  return(linea)\n  \n}\n\n# Probamos la funcion, sacando la linea del CIDE a la frontera\nlineaCIDE &lt;- dibuja_lineas_minima_distancia(X = -99.263426, Y = 19.374515)\n\n# Dibujamos el mapa\nleaflet(lineaCIDE) %&gt;% \n  addTiles() %&gt;% \n  addPolylines(color = \"#005700\")\n\n\n\n\n\nPues ahora tenemos una función que nos calcula la distancia y otra que nos dibuja las líneas. Entonces, a partir de estas funciones, cualquier programador experimentado de R puede calcular las distancias y la trayectoria en línea recta a la frontera a partir de solo tener las coordenadas X y Y del punto de interés, y copipegando las funciones de arriba en su sesión de RStudio."
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html#y-si-hacemos-un-shiny",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html#y-si-hacemos-un-shiny",
    "title": "Distancia Punto a Linea",
    "section": "8. ¿Y si hacemos un shiny?",
    "text": "8. ¿Y si hacemos un shiny?\nBueno, y ¿si hacemos una solución en la cual cualquier usuario pueda calcular la distancia de cualquier punto a la frontera sur de Estados Unidos? Esto lo vamos a lograr con la librería shiny y pegando todo el código que hemos hecho arriba.\n\nBreve nota sobre shiny.\nLa librería shiny nos permite realizar aplicaciones web interactivas utilizando el lenguaje de programación R para ( parafraseando a Hadley Wickham de RStudio ) pasar nuestros superpoderes de R a cualquier usuario que tenga acceso a un navegador web.\nEn este caso, el superpoder que vamos a pasar es el de poder calcular la distancia y poder construir la línea de mínima distancia tan solo con presionar un punto en el mapa.\nPegar el código del shiny haría este post excesivamente largo, por lo que si te interesa replicarlo, visita el siguiente enlace. (Y de una vez dame follow en Github)."
  },
  {
    "objectID": "posts/2020-02-18-distancia-punto-a-linea/index.html#conclusiones.",
    "href": "posts/2020-02-18-distancia-punto-a-linea/index.html#conclusiones.",
    "title": "Distancia Punto a Linea",
    "section": "9. Conclusiones.",
    "text": "9. Conclusiones.\nSobre los motivos…\nPara alguien experimentado en el análisis de datos espaciales quizá el contenido de este artículo no le sea lo suficientemente impresionante (para mi ciertamente no lo es tanto), pero si constituyó una buena excusa para programar algo divertido e introducir varios conceptos de varios cursos que voy a dar en la Escuela de Métodos del LNPP-CIDE a lo largo de este año. Por ejemplo, la parte de descarga de datos de internet lo voy a abordar en un curso de Manejo de bases de datos no estructurados que voy a dar en Noviembre, la de elaboración de mapas en el de Análisis de datos Geoespaciales en Mayo y la de creación de Aplicaciones en shiny lo voy a dar a lo largo de el mes de marzo, todos en 2020.\nSobre el uso de los vértices…\nPlaticando con mi colega Juan Javier Santos, creemos que calcular la distancia a partir de los vértices puede ser un poco problemático (pensando en el caso de una línea recta a una distancia \\(\\epsilon\\) pequeña de un punto) Sin embargo, creo que dada la cantidad de vértices y las distancias a las cuales se calculan las distancias, esto no debería constituir un gran problema.\nSobre la creación del shiny…\nIgualmente, si bien el shiny se construyó en un código de 151 lineas (tampoco es tanto) la elaboración del shiny implicó hacerlo a través de múltiples pasos (primero lo boceteé, luego diseñé la interfaz, luego generé las funciones, luego afiné detalles y corregí errores y excepciones, los cuales me salieron a montones a lo largo de la programación). Tuve un error al hacer el upload, debido a que en Mac, si bien corría bien de manera local, al subirlo había cierta discordancia entre el funcionamiento de ciertas librerías, por lo que recomiendo, si se va a subir la replica a internet, subirlo en una computadora Windows (en lo que encuentro cual fué el error).\nSobre el seguimiento al post.\nSi tienen dudas de alguna parte de esta entrada de blog, algún comentario o me detectaron algún error, me encuentro disponible en Twitter en @JuvenalCamposF, o a mi correo, juveroark@gmail.com.\nGracias por llegar hasta acá. :3\nJuvenal Campos."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html",
    "title": "Mi post de blogdown",
    "section": "",
    "text": "Contenido de la presentación brindada en el LNPP-Tech 2020."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html#importancia-de-tener-un-sitio-personal",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html#importancia-de-tener-un-sitio-personal",
    "title": "Mi post de blogdown",
    "section": "Importancia de tener un sitio personal",
    "text": "Importancia de tener un sitio personal\nEs importante tener un sitio personal para:\n\nPresentarnos efectivamente: nuestros intereses, nuestros proyectos, nuestras ideas y nuestra historia.\nIncrementar nuestra visibilidad en línea.\nPresentar los servicios y productos que ofrecemos.\nPracticar nuestras habilidades de comunicación.\nEs el CV moderno. Nos permite destacar y diferenciarnos de la competencia (que no tiene su propia página)."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html#qué-es-rmarkdown",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html#qué-es-rmarkdown",
    "title": "Mi post de blogdown",
    "section": "¿Qué es RMarkdown?",
    "text": "¿Qué es RMarkdown?\nRMarkdown es la combinación del lenguaje de marcado Markdown combinado con las capacidades del lenguaje de programación R para analizar y visualizar datos.\n\nAl combinar ambos lenguajes tenemos la capacidad de crear una gran cantidad de documentos, que van desde una página web básica en HTML hasta documentos *.pdf, documentos de Word, presentaciones de diapositivas, libros electrónicos y, por supuesto, blogs personales."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html#blogdown",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html#blogdown",
    "title": "Mi post de blogdown",
    "section": "Blogdown",
    "text": "Blogdown\nEl paquete Blogdown es el paquete de R creado para generar sitios web estáticos personalizables en Markdown. Entre las ventajas que ofrece estan las siguientes:\n\nPodemos incluir y ejecutar código de R (o de cualquier otro lenguaje de programación soportado por el paquete knit).\nAutomáticamente nos genera (renderiza) resultados como gráficas, tablas, resultados de análisis estadísticos y widgets de HTML.\nNos permite incluir citaciones, pies de página y ecuaciones LATEX.\n\nEste paquete se encuentra disponible en el CRAN. Se puede instalar con el siguiente código:\n\ninstall.packages(\"blogdown\")"
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html#por-qué-usar-blogdown",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html#por-qué-usar-blogdown",
    "title": "Mi post de blogdown",
    "section": "¿Por qué usar blogdown?",
    "text": "¿Por qué usar blogdown?\nLas ventajas de blogdown con respecto a otros servicios (como wordpress o publicar en medium) consisten prácticamente en dos cosas:\n\nFacilita la inclusión de código de R.\nEs gratuito\nTe permite empezar a trabajar desde ya en tu sitio web"
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html#framework-hugo",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html#framework-hugo",
    "title": "Mi post de blogdown",
    "section": "Framework Hugo",
    "text": "Framework Hugo\nPor default, el paquete blogdown usa Hugo, un generador de sitios estáticos open-source, el cual provee una manera rápida y flexible de generar el contenido de tu sitio y de compartirlo en línea.\nSegún su repositorio en línea, Hugo está optimizado para ser rápido, fácil de usar y ser altamente configurable. Hugo toma un directorio con contenido compatible y lo convierte en código HTML listo para ser publicado en la web.\nCuando se utiliza en blogdown, instalamos Hugo desde RStudio (por lo que no debemos preocuparnos tanto por entenderlo en un principio).\nPara revisar los temas disponibles para generar nuestros blogs, podemos consultar el enlace de temas disponibles para Hugo: https://themes.gohugo.io y ver cual nos agrada más.\nEl código fuente de Hugo se puede consultar en este repositorio: https://github.com/gohugoio/hugo"
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html#proceso-de-trabajo",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html#proceso-de-trabajo",
    "title": "Mi post de blogdown",
    "section": "Proceso de trabajo",
    "text": "Proceso de trabajo\n\nPara crear el blog por primera vez:\n\nNos vamos a File &gt; New Project &gt; en la barra de herramientas de RStudio.\n\n\n\nSeleccionamos New Directory &gt; para crear una carpeta con todos los archivos que se van a requerir. Una vez aquí seleccionamos la opción de Website using blogdown para generar un directorio adaptado a este fin.\n\n\n\nUna vez que vamos a crear el nuevo directorio, le damos un nombre y seleccionamos la opción de descargar Hugo, el tema que se va a ocupar (ver temas en https://themes.gohugo.io) y demás opciones por default.\n\nTerminamos por presionar Create Project.\n\n\nUna vez que configuramos el proyecto y el paquete blogdown ya creo los archivos base, la sesión se tiene que ver como en la siguiente imagen:\n\n\n\nPara correr el sitio, nos vamos a la sección de Addins, le damos en Serve Site y en la ventana del visualizador se debería ver la página generada.\n\n\n\nLa página generada se puede ver como en la imagen a continuación. Se utiliza el tema seleccionado y se ponen, por default, tres posts que podemos eliminar en la carpeta de contenido.\n\n\nLa página se puede modificar, modificando los archivos de la carpeta de layouts dentro de los archivos que ya nos instaló el paquete blogdown. Esto para darle una identidad propia, si se requiere.\n\n\nPara publicar una nueva entrada:\nPara publicar una entrada, seguimos el siguiente procedimiento:\n\nNos vamos a la sección de Addins y seleccionamos New Post. Una vez que lo hacemos, nos sale la siguiente ventana:\n\n\n\nYa en esta ventana, rellenamos cada campo de metadatos con los datos que consideremos pertinentes.\n\n\nY, a partir de acá, prosigue escribir el artículo con nuestros conocimientos de R y RMarkdown."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html#donde-publicar-mi-blog",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html#donde-publicar-mi-blog",
    "title": "Mi post de blogdown",
    "section": "¿Donde Publicar mi blog?",
    "text": "¿Donde Publicar mi blog?\nLos dos servicios más comunes para publicar páginas web de manera gratuita son Github Pages y Netlify. Podemos usar una de las dos, o ambas.\nEn ambos casos, podemos almacenar el código y los archivos en un repositorio de Github para que el servicio genere la página (y para ahorrarnos también el costo de un servidor). Esto aplica solo para el caso de páginas web estáticas.\nGithub Pages es un servicio de Github que permite construir una página web a partir de un repositorio de código. Para esto, tenemos que generar un repositorio y después cargar, en dicho repositorio, todo el código necesario para generar la página y configurar el repositorio para que muestre este contenido.\nPor su parte, Netlify es una compañía que ofrece servicios de computación en la nube para el almacenamiento de aplicaciones web y sitios estáticos (como un blog). Uno de sus servicios consiste en proveer almacenamiento (host) a páginas web almacenadas a través de un control de versiones Git, por lo que, al igual que el servicio anterior, nos permite almacenar páginas donde el código está almacenado en repositorios de Github.\nLa ventaja de Netlify sobre Github Pages radica en que Netlify corre Hugo desde sus servidores, por lo que la carga de la página se hace de manera más rápida. Otra ventaja es que Netlify nos puede ayudar a gestionar la compra de dominios (direcciones web), por lo que si queremos que nuestra página tenga su dominio personalizado, lo podemos obtener/comprar de forma sencilla desde este servicio."
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html#algunos-ejemplos",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html#algunos-ejemplos",
    "title": "Mi post de blogdown",
    "section": "Algunos ejemplos:",
    "text": "Algunos ejemplos:\nAlgunos ejemplos:\n\nYihui Xie\nRStudio blog\nRViews blog\nsimplystatistics.\nRob Hyndman.\nKarl Broman.\nJuvenal Campos"
  },
  {
    "objectID": "posts/2021-07-18-mi-post-de-blogdown/index.html#referencias",
    "href": "posts/2021-07-18-mi-post-de-blogdown/index.html#referencias",
    "title": "Mi post de blogdown",
    "section": "Referencias:",
    "text": "Referencias:\n\nLibrería de Github: https://github.com/rstudio/blogdown\nTemas de Hugo: https://themes.gohugo.io\nLibro de blogdown: https://bookdown.org/yihui/blogdown/\nPreguntas en stackoverflow: https://stackoverflow.com/questions/tagged/blogdown\nArtículo en español: https://rubenfcasal.github.io/post/creación-de-sitios-web-con-blogdown/\nBlogdown en 2021: https://alison.rbind.io/blog/2020-12-new-year-new-blogdown/\nPágina personal: https://pamepairo.netlify.app/post/7-12-2020-motivos-pagina-web/\nWebs con Rmarkdown: https://paocorrales.github.io/post/webs-con-rmarkdown/\nWikipedia de Netlify: https://es.wikipedia.org/wiki/Hugo_(software)\nCurso The personal website playbook de Tom Hirst. Clase 01. https://www.tomhirst.com/products/personal-website-playbook/"
  },
  {
    "objectID": "posts/2021-10-03-mis-visualizaciones-de-septiembre-2021/index.html",
    "href": "posts/2021-10-03-mis-visualizaciones-de-septiembre-2021/index.html",
    "title": "Mis visualizaciones de Septiembre 2021",
    "section": "",
    "text": "Este mes afortunadamente estuve cargadito de trabajo, por lo que no le dediqué tanto de mi tiempo libre a crear visualizaciones en mi tiempo libre.\nA continuación muestro las que logré hacer :B:"
  },
  {
    "objectID": "posts/2021-10-03-mis-visualizaciones-de-septiembre-2021/index.html#conclusión.",
    "href": "posts/2021-10-03-mis-visualizaciones-de-septiembre-2021/index.html#conclusión.",
    "title": "Mis visualizaciones de Septiembre 2021",
    "section": "Conclusión.",
    "text": "Conclusión.\nEste més se me pasó demasiado rápido y no logré mi meta de subir visualizaciónes cada dos días. Sin embargo, se estudió y se trabajó de manera satisfactoria.\nTengo algunas en proceso que estaré subiendo en los próximos días y empezaré a preparar los mapas del #30DayMapChallenge para Noviembre, así que yo creo que Octubre será un poco más de lo mismo :P.\nPor cierto, que complicado es tener la disciplina de generar contenido!!!\nRecuerden que si les agradó una visualización, pueden checar el código en el Github oficial de mi cuenta de IG: https://github.com/JuveCampos/ig_juvenalcampos.dataviz y también pueden seguirme subiendo fotos mías y de mi comida en https://www.instagram.com/jorgejuvenalcampos/\nSaludos!\n–Juvenal"
  },
  {
    "objectID": "posts/2022-03-02-mis-visualizaciones-de-febrero-2022/index.html",
    "href": "posts/2022-03-02-mis-visualizaciones-de-febrero-2022/index.html",
    "title": "Mis visualizaciones de Febrero, 2022 (y de meses anteriores)",
    "section": "",
    "text": "En esta entrada pongo las visualizaciones que hice durante febrero del presente año en mi página de Instagram.\nIgualmente, adjunto las visualizaciones que hice de noviembre de 2021 a enero del presente año, ya que, al ser tan pocas, no les hice una entrada a cada uno de los meses."
  },
  {
    "objectID": "posts/2022-03-02-mis-visualizaciones-de-febrero-2022/index.html#enero",
    "href": "posts/2022-03-02-mis-visualizaciones-de-febrero-2022/index.html#enero",
    "title": "Mis visualizaciones de Febrero, 2022 (y de meses anteriores)",
    "section": "Enero",
    "text": "Enero\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)"
  },
  {
    "objectID": "posts/2022-03-02-mis-visualizaciones-de-febrero-2022/index.html#diciembre",
    "href": "posts/2022-03-02-mis-visualizaciones-de-febrero-2022/index.html#diciembre",
    "title": "Mis visualizaciones de Febrero, 2022 (y de meses anteriores)",
    "section": "Diciembre:",
    "text": "Diciembre:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)"
  },
  {
    "objectID": "posts/2022-03-02-mis-visualizaciones-de-febrero-2022/index.html#noviembre",
    "href": "posts/2022-03-02-mis-visualizaciones-de-febrero-2022/index.html#noviembre",
    "title": "Mis visualizaciones de Febrero, 2022 (y de meses anteriores)",
    "section": "Noviembre",
    "text": "Noviembre\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)"
  },
  {
    "objectID": "posts/2021-08-06-solucion-problema-gdal-sf-mac/index.html",
    "href": "posts/2021-08-06-solucion-problema-gdal-sf-mac/index.html",
    "title": "Solución al problema de GDAL para instalar la librería sf en mac",
    "section": "",
    "text": "Resolviendo el problema de la instalación del paquete sf en mac."
  },
  {
    "objectID": "posts/2021-08-06-solucion-problema-gdal-sf-mac/index.html#procedimiento-en-mi-computadora.",
    "href": "posts/2021-08-06-solucion-problema-gdal-sf-mac/index.html#procedimiento-en-mi-computadora.",
    "title": "Solución al problema de GDAL para instalar la librería sf en mac",
    "section": "Procedimiento en mi computadora.",
    "text": "Procedimiento en mi computadora.\n\nAbrimos la terminal.\n\n\n\nFig. 5. La terminal en mi computadora.\n\n\nLa terminal de la computadora es ese programa que tiene apariencia de ser usado solo por hackers y sirve para acceder a las tripas del sistema de tu computadora. Si bien los usuarios de R rara vez nos tenemos que meter a usar este programa, no esta de mas irle perdiendo un poquito el miedo.\n\n\nInstalamos brew introduciendo en la terminal el código indicado arriba, que es este (solo copiar y pegar):\n\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n\nInstalamos Homebrew para poder instalar paquetes de sistema externos a nuestra computadora. Si no te convence esto, hay muchos videos para instalar Homebrew en Youtube (en caso de que tengas problemas en la descarga e instalación).\n\n\n\n\nFig. 6. Así se ve el proceso de instalación de Homebrew en Mac. Puede tardar un poco."
  },
  {
    "objectID": "posts/2021-08-06-solucion-problema-gdal-sf-mac/index.html#para-qué-mas-sirve-homebrew",
    "href": "posts/2021-08-06-solucion-problema-gdal-sf-mac/index.html#para-qué-mas-sirve-homebrew",
    "title": "Solución al problema de GDAL para instalar la librería sf en mac",
    "section": "¿Para qué mas sirve Homebrew?",
    "text": "¿Para qué mas sirve Homebrew?\nDel sitio AppleCoding.com , en este artículo (https://applecoding.com/noticias/llega-homebrew-3-soporte-nativo-apple-silicon-actualizar), podemos ver que generalmente son los desarrolladores y programadores los que utilizan Homebrew para la gestión de paquetes. Entre estos se encuentran la instalación de Python, Ruby, Node.js, Clojure, Jenkins, PostgreSQL, htop, imagemagick, entre otros.\nOtro post interesante para aprender la utilidad de Homebrew es el escrito por Matthew Brodberg, el cual nos explica como lo utiliza para la automatización de procesos y tener actualizados sus programas en Mac: https://opensource.com/article/20/6/homebrew-mac\n\nUna vez que ya tenemos instalado Homebrew, corremos los comandos brew que vienen en las instrucciones:\n\nbrew install pkg-config\nbrew install gdal proj geos\n\n\nFig. 7. Instalación de los paquetes de software en la computadora.\n\n\nEsto iniciará un proceso en la computadora para instalar el paquete proj, gdal y geos (necesarios para sf). Este proceso se ve como se muestra a continuación:\n\n\n\nFig. 8. Así se ve el proceso en la computadora.\n\n\nGuardamos en la computadora las variables de sistema:\n\n\nEscribimos en la terminal lo siguiente:\n\nexport LDFLAGS=\"-L/usr/local/opt/libpq/lib\"\nexport CPPFLAGS=\"-I/usr/local/opt/libpq/include\"\n\nFinalmente, instalamos en R las librerías que vamos a necesitar y al final, instalamos sf.\n\n# Para instalar rgeos\ninstall.packages (\"rgeos\", repos=\"http://R-Forge.R-project.org\", type=\"source\")\n# Para instalar rgdal\ninstall.packages (\"rgdal\", repos=\"http://R-Forge.R-project.org\", type=\"source\")\n# Llamamos devtools para instalar la version de Github de sf\nlibrary (devtools)\n# Instalamos sf desde su version de &lt;github \ninstall_github(\"r-spatial/sf\", configure.args = \"--with-proj-lib=/usr/local/lib/\")\n\nUna vez que instalamos todas las librerías de R necesarias, ya podremos llamar a la librería sf. Llamar a esta librería (sin problemas) deberia verse como a continuación:\n\n\n\nFig. 9. Así se ve cuando cargamos bien el paquete sf.\n\nY ahora si, ya podremos construir mapas y procesar información geográfica desde nuestra Mac."
  },
  {
    "objectID": "posts/2021-05-01-30daychartchallenge/index.html",
    "href": "posts/2021-05-01-30daychartchallenge/index.html",
    "title": "#30DayChartChallenge 2021. Mis Gráficas",
    "section": "",
    "text": "En esta entrada de blog pongo mis gráficas del #30DayChartChallenge en un solo sitio.\nLas gráficas son (en su mayoría) replicables sin mayor dificultad; para esto hay que descargarse los códigos (+ las bases de datos) directamente en el repositorio de Github: https://github.com/JuveCampos/30DayChartChallenge2021.\nCualquier duda, comentario o sugerencia favor de hacermelo llegar a la cuenta del Twitter :P."
  },
  {
    "objectID": "posts/2021-05-01-30daychartchallenge/index.html#día-01.-part-to-whole",
    "href": "posts/2021-05-01-30daychartchallenge/index.html#día-01.-part-to-whole",
    "title": "#30DayChartChallenge 2021. Mis Gráficas",
    "section": "Día 01. part-to-whole",
    "text": "Día 01. part-to-whole\nGráfica para ver la aportación de la producción de Aguacate de cada una de las entidades del país.\n\n\n\n\n\n\nTweet original\n\n\n\nVer tweet\nProducción de aguacate por Entidad Federativa de México, 2019. De todos los aguacates de México, #Michoacán produce tres cuartas partes. 🥑🥑🥑👀"
  },
  {
    "objectID": "posts/2021-05-01-30daychartchallenge/index.html#día-02.-pictogram",
    "href": "posts/2021-05-01-30daychartchallenge/index.html#día-02.-pictogram",
    "title": "#30DayChartChallenge 2021. Mis Gráficas",
    "section": "Día 02. pictogram",
    "text": "Día 02. pictogram\nGráfica de proporción de las viviendas de la CDMX que tienen consolas de videojuegos.\n\n\n\n\n\n\nTweet original\n\n\n\nVer tweet\nProporción de hogares con consolas de #Videojuegos en la Ciudad de México. Datos del Censo 2020 de @INEGI_INFORMA\nEn la #CDMX 21% de las viviendas reportaron tener una consola de videojuegos, el porcentaje más alto del país."
  },
  {
    "objectID": "posts/2021-05-01-30daychartchallenge/index.html#día-03.-historical",
    "href": "posts/2021-05-01-30daychartchallenge/index.html#día-03.-historical",
    "title": "#30DayChartChallenge 2021. Mis Gráficas",
    "section": "Día 03. historical",
    "text": "Día 03. historical\nGráfica de lluvia acumulada mensual desde 1877 a 2018.\n\n\n\n\n\n\nTweet original\n\n\n\nVer tweet\nLluvia acumulada mensual registrada por el observatorio de Tacubaya desde 1877 hasta 2018. Con estos datos, podemos saber que tanto llovió en la época de Porfirio Díaz y todos los meses que vinieron después."
  },
  {
    "objectID": "posts/2021-05-01-30daychartchallenge/index.html#día-04.-magical",
    "href": "posts/2021-05-01-30daychartchallenge/index.html#día-04.-magical",
    "title": "#30DayChartChallenge 2021. Mis Gráficas",
    "section": "Día 04. magical",
    "text": "Día 04. magical\nGráfica de menciones de cada una de las cuatro casas de Hogwarts en los 7 libros de Harry Potter.\n\n\n\n\n\n\nTweet original\n\n\n\nVer tweet\nMenciones a cada una de las 4 casas de #Hogwarts en los 7 libros de #harrypotter. Cada bolita es una mención.\nCódigo: https://github.com/JuveCampos/30DayChartChallenge2021\n\n\n\n\n\n\n\n\nTodos los días del challenge\n\n\n\nConsulta el repositorio completo para ver todas las gráficas y códigos del challenge.\n\n\n\n\nSi quieres apoyarme con $$$ para seguir haciendo gráficas y material de #Rstats, considera donarme lo de un café en el siguiente enlace:"
  },
  {
    "objectID": "posts/2021-10-31-mis-visualizaciones-de-octubre-2021/index.html",
    "href": "posts/2021-10-31-mis-visualizaciones-de-octubre-2021/index.html",
    "title": "Mis visualizaciones de Octubre 2021",
    "section": "",
    "text": "A continuación, las visualizaciones que elaboré a lo largo del mes de Octubre del 2021 para mi cuenta de visualizaciones de Instagram:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)"
  },
  {
    "objectID": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html",
    "href": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html",
    "title": "Visualizando pirámides de población en R",
    "section": "",
    "text": "Las pirámides de población (o pirámide demográfica, como le dicen los demógrafos) son un tipo de gráfica que nos permite analizar la distribución de la población por edades en una región determinada (municipio, estado o país).\nDesde el punto de vista gráfico, se trata de un doble histograma de frecuencias, dispuestos de manera horizontal, donde convencionalmente se ponen los grupos de edad masculina a la izquierda y los de población femenina a la derecha. En el eje y (el de las ordenadas o el que va para arriba) se disponen los grupos de edad, mientras que en el eje x (el de las abcisas, o el que va horizontal) van las cantidades de población. Para más información recomiendo leer este artículo de Wikipedia.\nDesde el punto de vista de visualización de datos en R y a pesar de la gran utilidad y amplio uso de este tipo de gráficas, no hay una función geom_popPyramid() nativa en ggplot2 que nos permita hacer pirámides de población sin tanto dolor (aunque podríamos programarla 😏). Sin embargo, en esta entrada de blog, nos dispondremos a generar una de estas gráficas a partir de elementos ya conocidos de esta librería."
  },
  {
    "objectID": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#antecedentes.",
    "href": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#antecedentes.",
    "title": "Visualizando pirámides de población en R",
    "section": "1. Antecedentes.",
    "text": "1. Antecedentes.\nEl viernes pasado estaba intentando hacer una de estas gráficas de población en mi trabajo, siendo (como casi siempre) mi primer impulso buscar en Google “como graficar pirámides de población en R”. Estos son algunos de los tutoriales y artículos que me ayudaron:\n\nhttp://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html\nhttps://klein.uk/teaching/viz/datavis-pyramids/\nhttps://stackoverflow.com/questions/38268741/geom-bar-ggplot2-stacked-grouped-bar-plot-with-positive-and-negative-values-p\nhttps://stackoverflow.com/questions/4559229/drawing-pyramid-plot-using-r-and-ggplot2\n\nTodos son muy buenos y sirven para complementar esta entrada. El problema que tuve al checarlos fué que 1) muchas funciones no estaban actualizadas y 2) las bases de datos eran inaccesibles, por lo que era imposible reproducir los ejemplos presentados. Es por eso que aquí presentamos una tercera opción (y en español :3) para aquellos que tengan la necesidad de hacer una gráfica de población en el futuro."
  },
  {
    "objectID": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#descarga-de-los-datos.",
    "href": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#descarga-de-los-datos.",
    "title": "Visualizando pirámides de población en R",
    "section": "2.1. Descarga de los datos.",
    "text": "2.1. Descarga de los datos.\nDescargamos los datos de población de la página de la encuesta intercensal 2015.\nLa liga de descarga es la siguiente:\nhttps://www.inegi.org.mx/contenidos/programas/intercensal/2015/tabulados/01_poblacion_mor.xls\n(En caso de que algún gobierno austero decida eliminar las bases de datos de INEGI por algún motivo en los próximos años, igualmente guardaré una copia en mi Github de los datos).\nNota 1. Se supone que el lector sabe descargar librerias del CRAN.\n\noptions(scipen = 999)\n# Descarga de los datos.\nlibrary(curl)\n\nUsing libcurl 8.14.1 with LibreSSL/3.3.6 \n\nlibrary(readxl)\n\n\ncurl::curl_download(url = \"https://www.inegi.org.mx/contenidos/programas/intercensal/2015/tabulados/01_poblacion_mor.xls\", destfile = \"mor_pop.xls\")\n\n\n# Leemos datos\n# Por tamaño de localidad\nbd &lt;- read_xls(\"mor_pop.xls\", sheet = 2, skip = 6)\n\nLa función anterior descargará el archivo en nuestro directorio de trabajo. La hoja 2 es la que contiene la población Por tamaño de localidad y las 6 líneas que se saltaron contienen el encabezado de logotipos que INEGI le pone a muchas de sus tablas."
  },
  {
    "objectID": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#procesado-de-la-información.",
    "href": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#procesado-de-la-información.",
    "title": "Visualizando pirámides de población en R",
    "section": "2.2. Procesado de la información.",
    "text": "2.2. Procesado de la información.\nNecesitamos obtener una tabla adecuada para realizar nuestra gráfica, tal como se explica en el siguiente esquema:\n\nEste esquema nos permite declarar una columna única de una sola base de datos, y declarar estas columnas dentro de los estéticos globales del ggplot como se ve más adelante.\nPara lograr esto, haremos el siguiente procesado de la información a través de la función tidyr::pivot_longer():\n\n\n# Librerias\nlibrary(tidyverse)\nlibrary(tidyr)\n\n# Procesamos datos\npop &lt;- bd %&gt;%\n# Filtramos los renglones vacios, \n# los renglones donde el Tamaño de localidad` es el Total y \n# los `Grupos quinquenales de edad` son todos \"Total\"    \n  filter(!is.na(Estimador) &\n           Estimador == \"Valor\" &\n           `Tamaño de localidad` == \"Total\" &\n           `Grupos quinquenales de edad` != \"Total\") %&gt;%\n# Hacemos pivot longer rotando las columnas hombres y mujeres    \n  pivot_longer(cols = c(\"Hombres\", \"Mujeres\"),\n               names_to = \"Sexo\",\n               values_to = \"Poblacion por Sexo\") %&gt;% \n# Nos quedamos con columnas utiles  \n  select(`Entidad federativa`, `Grupos quinquenales de edad`, \n         `Población total`, Sexo, `Poblacion por Sexo`)\n\n\n# Checamos la base \npop\n\n# A tibble: 34 × 5\n   `Entidad federativa` `Grupos quinquenales de edad` `Población total` Sexo   \n   &lt;chr&gt;                &lt;chr&gt;                                     &lt;dbl&gt; &lt;chr&gt;  \n 1 17 Morelos           00-04 años                               157558 Hombres\n 2 17 Morelos           00-04 años                               157558 Mujeres\n 3 17 Morelos           05-09 años                               164416 Hombres\n 4 17 Morelos           05-09 años                               164416 Mujeres\n 5 17 Morelos           10-14 años                               169614 Hombres\n 6 17 Morelos           10-14 años                               169614 Mujeres\n 7 17 Morelos           15-19 años                               169269 Hombres\n 8 17 Morelos           15-19 años                               169269 Mujeres\n 9 17 Morelos           20-24 años                               174065 Hombres\n10 17 Morelos           20-24 años                               174065 Mujeres\n# ℹ 24 more rows\n# ℹ 1 more variable: `Poblacion por Sexo` &lt;dbl&gt;\n\n\nAhora que tenemos la base como la necesitamos, procedemos a hacer la gráfica."
  },
  {
    "objectID": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#graficando-con-ggplot.",
    "href": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#graficando-con-ggplot.",
    "title": "Visualizando pirámides de población en R",
    "section": "2.3. Graficando con ggplot().",
    "text": "2.3. Graficando con ggplot().\nPara graficar utilizamos la función ggplot()."
  },
  {
    "objectID": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#primera-versión-utilizando-geom_col.",
    "href": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#primera-versión-utilizando-geom_col.",
    "title": "Visualizando pirámides de población en R",
    "section": "Primera versión: utilizando geom_col().",
    "text": "Primera versión: utilizando geom_col().\nLa primera versión que realizaremos será utilizando la función geom_col(). Esta función nos permite realizar gráficas de barras en R.\n\n### Grafica ----\nggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo)) +\n  geom_col(data = subset(pop, Sexo == \"Hombres\") %&gt;% \n             mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),\n              width = 0.5, fill = \"blue\") +\n  geom_col(data = subset(pop, Sexo == \"Mujeres\"),\n           width = 0.5, fill = \"pink\") + \n  coord_flip()\n\n\nNótese las escalas del eje x\nAhora, tenemos que enfocarnos en la parte del eje de población. Primero que nada, tenemos que hacer un poco de análisis.\n\n# Valores maximos de población: \nmax(pop$`Poblacion por Sexo`)\n\n[1] 88967\n\n\nEl máximo de población es 88,967 personas (correspondiente a Mujeres morelenses entre 20 a 24 años). Para el eje x, vamos a poner escalas cada 20,000 personas (para que sean unas 5 marcas en las escalas).\n\n# BREAKS - DEFINEN LA POSICIÓN \n# Obtenemos los puntos donde se van a poner las escalas de la población. \nseq(0, 100000, by = 20000)\n\n[1]      0  20000  40000  60000  80000 100000\n\nseq(-100000, -20000, by = 20000)\n\n[1] -100000  -80000  -60000  -40000  -20000\n\n# Secuencia de puntos donde se van a poner las escalas del eje x\nc(seq(-100000, -20000, by = 20000), \n  seq(0, 100000, by = 20000))\n\n [1] -100000  -80000  -60000  -40000  -20000       0   20000   40000   60000\n[10]   80000  100000\n\n\nComo vemos arriba, es una secuencia que va desde -100,000 hasta 100,000. Esto implica que, dentro de la gráfica, ggplot() va a poner las etiquetas en los puntos marcados arriba, como puede verse en la siguiente imágen:\nAhora, pongamosle las etiquetas en los puntos que determinamos arriba, a través de la función\n\n# LABELS - DEFINEN EL CONTENIDO\n\nc(seq(-100000, -20000, by = 20000) * -1, \n  seq(0, 100000, by = 20000)) \n\n [1] 100000  80000  60000  40000  20000      0  20000  40000  60000  80000\n[11] 100000\n\n\nPara este caso, las etiquetas son casi iguales que los quiebres que calculamos arriba, con la diferencia de que la parte de la población masculina tienen que ser positivos, no negativos (por eso los multiplicamos por -1).\nAhora, incorporamos esto en la gráfica que ya hicimos arriba a través de la función scale_y_continuous().\nEmpezamos declarando los elementos estéticos. Los estéticos globales que vamos a usar son el x, el y, y el fill. x nos determinará la variable categórica que irá en el eje x, y la variable numérica que irá en el eje y y fill la variable categórica que clasifica a los datos en dos categorías, Hombres y Mujeres, asignando un color distinto a cada tipo de dato.\n\n# No correr! Abajo está completo.\nggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo))\n\nDespués añadimos las gráficas de columnas mediante la función geom_col() con subconjuntos de los datos filtrando por hombres y mujeres. Después hacemos un cambio de ejes y al final añadimos las etiquetas en los ejes de las gráficas. A continuación el código completo.\n\n### Grafica ----\n(plt &lt;- ggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo)) +\n  # Seccion de HOMBRES\n  geom_col(data = subset(pop, Sexo == \"Hombres\") %&gt;% \n             # Convertimos los datos de los Hombres en negativos\n             mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),\n         width = 0.5, fill = \"blue\") +\n  # Seccion de MUJERES\n  geom_col(data = subset(pop, Sexo == \"Mujeres\"),\n         width = 0.5, fill = \"pink\") + \n  # Cambio de ejes de coordenadas\n  coord_flip() + \n     scale_y_continuous(\n     breaks = c(seq(-100000, -20000, by = 20000), \n                seq(0, 100000, by = 20000)),\n     labels = c(seq(-100000, -20000, by = 20000) * -1, \n                seq(0, 100000, by = 20000))) )\n\n\nYa a partir de aquí lo que procede es personalizar el tema y las etiquetas."
  },
  {
    "objectID": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#segunda-versión-utilizando-geom_linerange.",
    "href": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#segunda-versión-utilizando-geom_linerange.",
    "title": "Visualizando pirámides de población en R",
    "section": "2.4. Segunda versión: utilizando geom_linerange().",
    "text": "2.4. Segunda versión: utilizando geom_linerange().\nOtra versión muy común de las gráficas de pirámides de población consiste en poner los grupos de edad en el centro de la gráfica. Esto no es posible de realizar con las barras normales de ggplot, por lo que utilizaremos un elemento gráfico llamado geom_linerange(), el cual nos permite representar de manera gráfica intervalos con inicio y final.\nLa única diferencia entre el metodo anterior y el que viene a continuación, consiste en 1) Cambiar el geom_col() por un geom_linerange(), incluir dentro el aes(ymin, ymax) y 3) también introducir como etiquetas de texto en el centro de la gráfica con geom_label().\nIgualmente, hay que programar un desplazamiento de las barras a la derecha y a la izquierda, para dejar el espacio para las etiquetas que van a ir en el centro. Para la gráfica que queremos hacer dejaremos un desplazamiento de 10,000 unidades de población (la magnitud de este desplazamiento depende de los datos del eje y, en este caso de los números de población).\nSe escogió 10,000 como desplazamiento porque así cabe bien el texto de las categorias de edad.\n\n### Grafica ----\ndesplazamiento &lt;- 10000\n\nPara este caso modificaremos ligeramente las etiquetas:\n\n# BREAKS - DEFINEN LA POSICION\nc(seq(-180000, 0, by = 30000) - desplazamiento,\n                seq(0, 180000, by = 30000) + desplazamiento)\n\n [1] -190000 -160000 -130000 -100000  -70000  -40000  -10000   10000   40000\n[10]   70000  100000  130000  160000  190000\n\n\nEstas serán las nuevas coordenadas dentro del eje X en las que se van a colocar las nuevas etiquetas. Es lo mismo que con las anteriores, solo que sumandole/restándole el desplazamiento.\n\n# LABELS - DEFINEN EL CONTENIDO\nc(rev(seq(0, 180000, by = 30000)), \n  seq(0, 180000, by = 30000))\n\n [1] 180000 150000 120000  90000  60000  30000      0      0  30000  60000\n[11]  90000 120000 150000 180000\n\n\nAhora si, hacemos la gráfica:\n\n# Graficamos\nggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo)) +\n  geom_linerange(data = subset(pop, Sexo == \"Hombres\") %&gt;% \n                   # Convertimos los datos de los Hombres en negativos\n                 mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),\n                 aes(ymin = -desplazamiento, \n                     ymax = -desplazamiento +`Poblacion por Sexo`),\n                 size = 5, \n                 color = \"blue\") +\n  geom_linerange(data = subset(pop, Sexo == \"Mujeres\"),\n                 aes(ymin = desplazamiento, \n                     ymax = desplazamiento  +`Poblacion por Sexo`),\n                 size = 5, \n                 color = \"pink\") +\n  # Cambiamos el orden de los ejes de la graficas \n  coord_flip()  +\n   scale_y_continuous(\n     breaks = c(seq(-180000, 0, by = 30000) - desplazamiento,\n                seq(0, 180000, by = 30000) + desplazamiento),\n     labels = c(rev(seq(0, 180000, by = 30000)),\n               seq(0, 180000, by = 30000))) +\n  # Eliminamos el texto del eje x volteado\n   theme(plot.title = element_text(hjust = .5),\n        axis.ticks = element_blank(),\n        axis.text.y = element_blank()\n        ) +   # Centre plot title\n   # Aniadimos la escala de texto en el centro. \n   geom_label(aes(x = `Grupos quinquenales de edad`, \n                  y = 0, \n                  label = `Grupos quinquenales de edad`),\n   # Caracteristicas del texto             \n             family = \"Arial\",\n             size = 3.5, \n             label.padding = unit(0.0, \"lines\"), \n             label.size = 0,\n             label.r = unit(0.0, \"lines\"), \n             fill = \"#FFFFFF\", \n             alpha = 0.9, \n             color = \"#5D646F\")"
  },
  {
    "objectID": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#qué-sigue",
    "href": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#qué-sigue",
    "title": "Visualizando pirámides de población en R",
    "section": "2.5. ¿Qué sigue?",
    "text": "2.5. ¿Qué sigue?\nLo que sigue a continuación es embellecer la gráfica modificando los temas: fondo de la gráfica, tipo de letra, colores, etc. Igualmente, añadir formato a los números, poner títulos, subtítulos y pies de página, modificar los colores (quizá el rosa para mujeres y azul para hombres no parezca tan adecuado), entre alguna otra función añadida que nos interese agregar.\nUna de las ventajas de hacer visualizaciones en código es que es difícil solo la primera vez. Una vez que ya tenemos el código, podemos tenerlo guardado para hacer otras gráficas cuando salgan nuevos datos de población ( alguien dijo censo 2020?) o que podemos utilizarlo para graficar otros datos (por ejemplo, pirámides para municipios dentro de un estado o de otros estados, o por tamaños de comunidad). O ya de plano construir una aplicación en Shiny para que el usuario haga las pirámides de población que quiera. Explora las posibilidades."
  },
  {
    "objectID": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#ejemplo-reproducible.",
    "href": "posts/2020-01-26-visualizando-piramides-de-poblacion-en-r/index.html#ejemplo-reproducible.",
    "title": "Visualizando pirámides de población en R",
    "section": "2.6 Ejemplo reproducible.",
    "text": "2.6 Ejemplo reproducible.\nTras la publicación de esta entrada de post, recibí un par de comentarios muy acertados:\n\n\nRecomendaciones: tu último grupo de edad agrupa demasiada población, separaría 75-79, 80-84 y 85+. Recomiendo también prorratear la población con edad No especificada. Finalmente, para quien quiera comparar estructuras lo ideal es usar proporciones, no volumen.\n\n— El Mau (@mochis22) January 28, 2020\n\n\n\n\nBuenísimo👏🏼👏🏼👏🏼! Igual sería bueno una legend o geom_text para saber qué significa los colores rosas y azules, no? Jejeje\n\n— Claudio Pacheco (@claudiodanielpc) January 28, 2020\n\n\nPor lo tanto, y para no reescribir todo de nuevo, anexo un ejemplo reproducible que añade las sugerencias mencionadas arriba.\n\n# Descarga de los datos.\nlibrary(curl)\nlibrary(readxl)\nlibrary(tidyverse)\ncurl::curl_download(url = \"https://www.inegi.org.mx/contenidos/programas/intercensal/2015/tabulados/01_poblacion_mor.xls\", destfile = \"mor_pop.xls\")\n\n# Leemos datos\n# Por tamaño de localidad\nmor &lt;- read_xls(\"mor_pop.xls\", sheet = 2, skip = 6)\n\n# Procesado de los datos\npop &lt;- mor %&gt;%\n  # Filtramos los renglones vacios,\n  # los renglones donde el Tamaño de localidad` es el Total y\n  # los `Grupos quinquenales de edad` son todos \"Total\"    \n  filter(!is.na(Estimador) &\n           Estimador == \"Valor\" &\n           `Tamaño de localidad` == \"Total\" &\n           `Grupos quinquenales de edad` != \"Total\") %&gt;%\n  mutate(totH = sum(Hombres),\n         totM = sum(Mujeres)) %&gt;%\n  mutate(Hombres = (Hombres/totH)*100,\n         Mujeres = (Mujeres/totM)*100\n  ) %&gt;%\n  select(-totH, -totM) %&gt;%\n  # Hacemos pivot longer rotando las columnas hombres y mujeres    \n  pivot_longer(cols = c(\"Hombres\", \"Mujeres\"),\n               names_to = \"Sexo\",\n               values_to = \"Poblacion por Sexo\") %&gt;%\n  # Nos quedamos con columnas utiles  \n  select(`Entidad federativa`, `Grupos quinquenales de edad`,\n         `Población total`, Sexo, `Poblacion por Sexo`) %&gt;%\n  filter(!(`Grupos quinquenales de edad` %in% c(\"75 años y más\",\"No especificado\")))\n\n\n# Elaboracion de la grafica\nggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo)) +\n  geom_bar(data = subset(pop, Sexo == \"Hombres\") %&gt;% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),\n           stat = \"identity\", width = 0.5, fill = \"blue\") +\n  geom_bar(data = subset(pop, Sexo == \"Mujeres\"),\n           stat = \"identity\", width = 0.5, fill = \"pink\") +\n  coord_flip() +\n  ggthemes::theme_tufte() +\n  theme(plot.title = element_text(family = \"Arial\", hjust = 0.5, size = 20),\n        axis.text.x = element_text(family = \"Arial\"),\n        axis.text.y = element_text(family = \"Arial\")\n  ) +\n  labs(title = \"Pirámide Poblacional de Morelos, 2015\",\n       x = \"\",\n       y = \"Hombres                        Mujeres\",\n       caption = \"Fuente: INEGI. Encuesta intercensal 2015. Tabulados de Población \\nSe omiten personas de 75 años y más, por venir aglomeradas en un mismo grupo de edad.\") +\n  scale_y_continuous(breaks = seq(-12, 12, by = 2), labels = paste0(c(seq(-12, 0, by = 2)*-1, seq(2, 12, by = 2)), \"%\"))\n\nggsave(filename= \"ppMorelos.png\", dpi = 300)"
  },
  {
    "objectID": "posts/2021-11-03-mis-visualizaciones-de-octubre-2021-v2/index.html",
    "href": "posts/2021-11-03-mis-visualizaciones-de-octubre-2021-v2/index.html",
    "title": "Mis visualizaciones de Octubre, 2021 (v2)",
    "section": "",
    "text": "A continuación, las visualizaciones que elaboré a lo largo del mes de Octubre del 2021 para mi cuenta de visualizaciones de Instagram:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)"
  },
  {
    "objectID": "posts/2020-07-26-cortando-islas/index.html",
    "href": "posts/2020-07-26-cortando-islas/index.html",
    "title": "Cortando Islas",
    "section": "",
    "text": "Elaborado por: Juvenal Campos y Ami Sosa\nVer países y continentes enteros ya no es un derecho exclusivo de los astronautas o los superhéroes. Gracias a los sistemas de información geográfica cada vez es más sencillo crear nuestros propios mapas y representar visualmente los fenómenos que consideramos importantes para entender mejor el mundo que nos rodea. Sin embargo, hacer mapas y manipular información geográfica es un ejercicio muy poderoso que puede ser usado para informar o para desinformar.\n“Recuerda, un gran poder conlleva una gran responsabilidad”\n\nPara el presente tutorial nos concentraremos en el caso de presentar información a través de mapas con territorios insulares.\nLas islas son uno de esos detalles que podemos pasar por alto pero que pueden tener efectos confusos para quienes ven nuestros mapas, ya que no todas las islas son iguales.\nDe acuerdo con el INEGI, el Territorio Insular Mexicano está integrado por 2,128 islas entre las cuales sólo 82 están pobladas.\nEs importante investigar previamente para saber con qué tipo de isla estamos lidiando, para decidir si contribuye o deteriora la claridad de comprensión y análisis de nuestros datos.\nPor ejemplo, si estamos mapeando defunciones de COVID-19 por municipio, incluir en nuestro mapa una isla deshabitada que forma parte de un municipio podría llevarnos a visualizar información errónea y decir que esa isla tiene defunciones cuando esta ni si quiera está poblada.\nEntonces, si consideras que lo más conveniente es no mapear una isla pero no sabes cómo eliminarla, no te preocupes, aquí te proponemos una manera de hacerlo. (Otra forma de eliminar islas la puedes encontrar acá)\n\nInicio del tutorial\nSi quieres descargar la base de datos para replicar este ejercicio, puedes descargarla de este enlace. La base de datos en la que nos basamos es la de división municipal de CONABIO, la cual puedes descargar de este enlace.\nPrimero lo básico, cargar las librerías tidyverse, sf y leaflet que nos ayudarán a manipular y visualizar información geográfica.\n\n# Librerías ----\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(leaflet)\n\nDespués debemos obtener la base de datos con el archivo de información geográfica que vamos a utilizar para crear nuestro mapa y filtramos el nombre del estado al que le vamos a quitar las islas.\nEn este caso vamos a eliminar las islas Revillagigedo de Colima, que son consideradas como Patrimonio Natural de la Humanidad, como parque nacional y porque tienen una población muy pequeña (60 habitantes entre todas las islas).\n\nIslas Revillagigedo\n\n\n\n# Datos ----\n\n# Capa geografica\nurl_shape &lt;- \"https://raw.githubusercontent.com/JuveCampos/juveBlog/master/cortando%20Islas/mpios.geojson\"\n\n# Leemos el shape\nbd &lt;- st_read(url_shape, \n              quiet = T)\n\n# Filtramos Colima\ncolima &lt;- bd %&gt;% filter(NOM_ENT == \"Colima\")\n\nExploramos la base y la mapeamos para ver cómo se ve el estado con islas y después nos aseguramos de que sea una base geográfica.\n\n# Exploramos la base \nplot(colima, max.plot = 1)\n\n\n\n\n\n\n\n\nComo podemos ver en la imagen de arriba, el objeto colima efectivamente es una base de datos geográfica que abarca tanto la zona territorial como las islas que se encuentran al poniente.\n\n# Checamos el sistema de coordenadas \n## de referencia (crs)\nst_crs(colima)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nLa proyección tiene un sistema de referencia de coordenadas igual a 4326 (WGS84), lo que significa que está en términos de latitud y longitud. Saber el sistema de referencia es muy importante a la hora de utilizar y procesar la información.\nDespués obtenemos las coordenadas extremas del territorio de Colima, es decir, el punto máximo en x y en y, el punto mínimo en x y en y, buscando generar un cuadro que englobe al estado sin sus islas.\nPuedes obtener estas coordenadas en Google Maps, como muestran las imágenes a continuación:\n\n\nCoordenadas mínimas del polígono territorial de Colima\n\n\n\nCoordenadas máximas del polígono territorial de Colima\n\nRegistramos las coordenadas:\n\n# Coordenadas extremas Colima Territorial\nmaxX = -103.47499\nminX = -104.76983\nmaxY = 19.563769\nminY = 18.65329\n\nDespués elaboramos la matriz de coordenadas que dará origen al cuadro utilizando la función expand.grid(). Lo que hace esta función es crear una base de datos con todas las combinaciones posibles de los vectores que introducimos en la función.\n\n# Generamos combinaciones de coordenadas a \n## partir de las coordenadas extremas\ncuadro &lt;- expand.grid(x = c(minX,\n                            maxX),\n                      y = c(minY,\n                            maxY))  %&gt;%\n  as.matrix()\n\n# Imprimimos la tabla del cuadro\ncuadro\n\n             x        y\n[1,] -104.7698 18.65329\n[2,] -103.4750 18.65329\n[3,] -104.7698 19.56377\n[4,] -103.4750 19.56377\n\n\nUna vez que tenemos la matriz, ordenamos las coordenadas de manera que formen un cuadro cerrado , repitiendo la coordenada 1, de tal forma que sigan un caminito o trayectoria:\n\n# Forma de ordenar las coordenadas de tal forma\n## que generen una trayectoria que genere \n## un cuadro\ncuadro &lt;- cuadro[c(1,2,4,3,1),]\n\nConvertimos el cuadro en una lista para poder convertirlo después en un objeto geométrico poligonal, con el sistema de coordenadas de referencia crs = 4326 de latitud y longitud.\n\n# Convertimos a lista\ncuadro &lt;- list(cuadro)\n# Convertimos a objeto geografico\ncuadro &lt;- st_polygon(cuadro) %&gt;% st_sfc(crs = 4326)\n\nAhora si, verifiquemos que el cuadro fue creado correctamente y exploremos cómo se ve.\n\n# Checamos como se ve el cuadro\nleaflet(colima) %&gt;% \n  addTiles() %&gt;% \n  addPolygons(opacity = 1) %&gt;% \n  addPolygons(data = cuadro, \n              color = \"red\")\n\n\n\n\n\n!Perfecto! El cuadro rojo que creamos abarca al estado de Colima sin sus islas.\nPero ¿por qué el orden de coordenaas para cerrar el cuadro no es 1,2,3,4,1? pues porque necesitamos crear un cuadrado y según las coordenadas que nos dio la matriz ese sería el orden adecuado, si lo hacemos del 1 al 4 trazaríamos un moño sobre Colima, no un cuadro. (Como se puede ver a continuación).\n\nAhora, intersectamos el cuadro con el polígono se Colima a traves de la función st_intersection(x, y), la cual extrae del polígono x lo que se intersecta con el polígono y.\n\n# Extraemos la parte del poligono de Colima que \n## se intersecta con el cuadro que generamos \ncolima_sin_islas &lt;- st_intersection(colima, cuadro)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n# Checamos que efectivamente solo tengamos el \n## polígono territorial de Colima\nplot(colima_sin_islas)\n\n\n\n\n\n\n\n\nFinalmente tenemos que regresar ese polígono al shape original. Para eso, primero sacamos de nuestra base de datos a Colima con islas y luego metemos a Colima sin islas.\n\n# Le quitamos Colima\nbd &lt;- bd %&gt;% \n  filter(NOM_ENT != \"Colima\")\n\n# Metemos el Colima sin islas. \nbd &lt;- rbind(bd, colima_sin_islas)\n\n# Y aquí podemos ver que Colima ya no tiene a las Islas Revillagigedo en nuestro mapa.\nplot(bd, max.plot = 1)\n\n\n\n\n\n\n\n\nPor último guardamos nuestro nuevo mapa.\nOJO cuando trabajamos con archivos .geojson, no nos es posible reescribirlos (salvo que ), así que tenemos que crear nuevos archivos para cada cambio que hagamos.\n\n# Guardar el nuevo archivo geográfico\nst_write(bd, \n  \"01_Datos/Shapes/mpios_sin_revillagigedo.geojson\")\n\n# # Si a fuerzas quieres sobre-escribir\n# st_write(bd, \n#          '01_Datos/Shapes/mpios_sin_revillagigedo.geojson',\n#          layer_options = 'OVERWRITE=YES', \n#          update = TRUE)\n\nPara agilizar el proceso de cortar islas podemos hacer una función. Los datos de entrada que utilizaremos para nuestra función son las coordenadas del cuadro y el shape que vamos a recortar.\n\n# Hacemos nuestra función\nrecorte_cuadro &lt;- function(shp, \n                           minX, \n                           maxX,\n                           minY,\n                           maxY){\n# Copiamos y adecuamos el código que escribimos antes\n# Elaboramos la matriz de coordenadas que dará \n##origen al cuadro\n  cuadro &lt;- expand.grid(x = c(minX,\n                              maxX),\n                        y = c(minY,\n                              maxY))  %&gt;%\n    as.matrix()\n  \n  # Ordenamos de manera cíclica el cuadro, y lo cerramos como lo hicimos anteriormente. \n  cuadro &lt;- cuadro[c(1,2,4,3,1),]\n  \n  # Lo convertimos en lista y después en un objeto geométrico poligonal con sistema de coordenadas de referencia crs = 4326 lat/long. \n  cuadro &lt;- list(cuadro)\n  cuadro &lt;- st_polygon(cuadro) %&gt;% \n    st_sfc(crs = 4326)\n  \n  # Ahora si, ¡fuera islas!\n  edo_sin_islas &lt;- st_intersection(shp, cuadro)\n  \n  # Especificamos lo que queremos que nos devuelva la función: \n  return(edo_sin_islas)\n}\n\nCon nuestra nueva función ahorramos tiempo y podemos cortar las islas de Nayarit y Yucatán (por ejemplo) mucho más rápido.\n\n# Remover las Islas Marias de Nayarit... \nnayarit &lt;- bd %&gt;% \n  filter(NOM_ENT == \"Nayarit\")\n\nnayarit_sin_islas_marias &lt;- recorte_cuadro(\n  shp = nayarit, \n  minX = -105.7765, \n  maxX = -103.7209, \n  minY = 20.60322, \n  maxY = 23.0845)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n# Vemos que si funciona. \nplot(nayarit_sin_islas_marias, max.plot = 1)\n\n\n\n\n\n\n\n\nAhora vamos con Yucatán.\n\n# Remover el arrecife Alacranes de Yucatan\nyucatan &lt;- bd %&gt;% filter(NOM_ENT == \"Yucatán\")\nyucatan_sin_arrecife_alacranes &lt;- recorte_cuadro(\n  shp = yucatan,                                 \n  minX = -90.620039,\n  maxX = -87.414154,\n  minY = 19.584267, \n  maxY = 21.731110)\n\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n\n# Vemos que ya no tiene islas\nplot(yucatan_sin_arrecife_alacranes, max.plot = 1)\n\n\n\n\n\n\n\n\nFinalmente generamos una nueva capa de datos sin las islas de Yucatán ni las de Nayarit.\n\nbd &lt;- bd %&gt;% \n  # Quitamos los estados con islas\n  filter(!(NOM_ENT %in% c(\"Yucatán\", \"Nayarit\"))) %&gt;% \n  # Metemos los nuevos sin islas\n  rbind(yucatan_sin_arrecife_alacranes, nayarit_sin_islas_marias) \n\n# Nos aseguramos de que todo haya funcionado bien \nplot(bd, max.plot = 1)\n\n# Guardamos el resultado en un nuevo archivo .geojson\nst_write(bd, \"01_Datos/Shapes/mpios_con_menos_islas_aun.geojson\")\n\n# # Igual, si a fuerzas quieres sobre-escribir\n# st_write(bd, \n#          '01_Datos/Shapes/mpios_con_menos_islas_aun.geojson',\n#          layer_options = 'OVERWRITE=YES', \n#          update = TRUE)\n\n¡Y listo!\nTenemos a los tres estados mapeados sin islas, listos para comunicar información correcta y sin datos que puedan generar confusión.\nEste procedimiento es útil para ilustrar como podemos manipular bases de datos geográficas, las cuales, aparte del tratamiento normal que se puede hacer a través de los verbos dplyr que aplican a todas las bases de datos, también involucran un tipo de manipulación espacial a partir de trabajar con las geomatrías que tienen asociadas.\nSiempre es un buen ejercicio reflexionar antes de construir mapas y preguntarnos ¿Qué quiero comunicar? ¿Por qué quiero comunicar esto? ¿Cómo se relaciona la geografía con los datos que voy a utilizar? ¿Cómo mapeo mis datos de la manera más clara posible? En este caso, desasociar islas deshabitadas tiene sentido pero, por ejemplo… ¿sería válido deshacernos de la isla de Cozumel en nuestro análisis, y en la cual vive la mayoría de la población del municipio? Son cosas que nuestra metodología de trabajo debe considerar.\nRecuerda usar el poder de los mapas responsablemente.\n\n¡Gracias por leernos! :3"
  },
  {
    "objectID": "posts/2021-08-31-mis-visualizaciones-de-agosto-2021/index.html",
    "href": "posts/2021-08-31-mis-visualizaciones-de-agosto-2021/index.html",
    "title": "Mis visualizaciones de agosto 2021",
    "section": "",
    "text": "Colección de las visualizaciones que he realizado este mes en mi cuenta de Instagram de visualizaciones de datos."
  },
  {
    "objectID": "posts/2021-08-31-mis-visualizaciones-de-agosto-2021/index.html#de-agosto-conversación-sobre-barbacoa",
    "href": "posts/2021-08-31-mis-visualizaciones-de-agosto-2021/index.html#de-agosto-conversación-sobre-barbacoa",
    "title": "Mis visualizaciones de agosto 2021",
    "section": "1 de agosto: Conversación sobre barbacoa",
    "text": "1 de agosto: Conversación sobre barbacoa\nEl día de la consulta popular los tacos de barbacoa fueron #TT en Twitter. Para explorar la conversación en torno a este delicioso alimento 🤤 elaboré una nube de palabras.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVer esta publicación en Instagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUna publicación compartida por Juvenal Campos - Viz (@juvenalcampos.dataviz)"
  },
  {
    "objectID": "posts/2021-08-31-mis-visualizaciones-de-agosto-2021/index.html#más-visualizaciones-del-mes",
    "href": "posts/2021-08-31-mis-visualizaciones-de-agosto-2021/index.html#más-visualizaciones-del-mes",
    "title": "Mis visualizaciones de agosto 2021",
    "section": "Más visualizaciones del mes",
    "text": "Más visualizaciones del mes\nDurante agosto 2021, continué publicando diversas visualizaciones de datos en mi cuenta de Instagram, incluyendo:\n\n2 de Agosto: Gráfica a nivel sección de las participaciones en la Consulta popular\n2 de agosto: Mapa de participación de Morelos\n9 de agosto: Mapa de la participación electoral en la consulta popular. Estado de Guerrero\n10 de agosto: Boxplots de la participación por tamaño de comunidad\n12 de Agosto: Burbujas de producción de peras\n24 de Agosto: Mapas con nuevas variables (Netflix y servicios similares)\n25 de Agosto: La configuración de la nueva legislatura (usando {ggparliament})\n26 de Agosto: Salarios brutos gobierno CDMX\n27 de Agosto: Scrapeando las bases de datos del Gob CDMX\n30 de Agosto: Análisis de sentimientos de Pedro Páramo\n\n\nTodas estas visualizaciones forman parte de mi exploración continua en el mundo de la visualización de datos y el análisis estadístico usando R, compartiendo tanto técnicas como insights de datos públicos y proyectos personales."
  },
  {
    "objectID": "posts/2022-10-11-iphone-14-caracteristicas-y-datos/index.html",
    "href": "posts/2022-10-11-iphone-14-caracteristicas-y-datos/index.html",
    "title": "iPhone 14: presentación, características y datos",
    "section": "",
    "text": "Los lanzamientos de productos tecnológicos suelen ser año con año eventos altamente esperados por los fanáticos de sus respectivas marcas, y ningún producto tecnológico es más anticipado año con año que el nuevo modelo del iPhone de Apple. La presentación del producto insignia de la empresa californiana suele ser un evento visto por millones de personas a lo largo del planeta, y no es para menos, ya que, si bien Apple no es la marca de celulares más vendida del mundo, el iPhone si es de los modelos de teléfono más solicitados por las masas, a tal grado de ocupar el 16% de la cuota de mercado de smartphones mundial.\nLos modelos presentados este año fueron el iPhone 14 y el iPhone 14 Pro en dos tamaños (6.1 y 6.7 pulgadas para cada modelo). El modelo base, el iPhone 14, cuenta con el mismo diseño, el mismo procesador y el mismo número de cámaras que la versión anterior, con la única diferencia de presentar un modelo cuya diagonal es 0.6 pulgadas más grande.\n\n\n\niPhone 14 Pro (izq) y iPhone 14 (der)\n\n\n\niPhone 14 Pro (izq) y iPhone 14 (der)\n\nEl modelo Pro cuenta igualmente con ligeras mejoras en el hardware, siendo su principal diferencia con respecto al modelo del año pasado la sustitución del notch o pestaña de la cámara frontal, colocando lo que la empresa denomina como “isla dinámica”. Esta isla es una abertura de mas pequeña en la parte superior de la pantalla que, en conjunto con el sistema operativo, adquiere distintas formas de acuerdo a la información que el teléfono desea proporcionar al usuario, haciendolo pensar que la abertura es un elemento más de la pantalla y de la interfaz de usuario.\nOtras características nuevas de los teléfonos fueron funcionalidades que nadie de sus usuarios desearía estar en situación de necesitar: la detección de choques vehiculares (Crash Detection) y el envío de mensajes de emergencia a través de satélites. La primera funcionalidad consiste en añadir sensores para detectar si el usuario se ha visto envuelto en un accidente y llamar a los servicios de emergencia en caso de que el usuario no pueda realizar esa comunicación, mientras que la segunda consiste en permitir a los usuarios en una situación emergencia lejos de la señal de teléfono el poder solicitar un rescate.\nLo que no tiene de nuevo (y muchos usuarios demandaban) era la adopción del estándar USB-C en los nuevos modelos. Actualmente el teléfono sigue usando su propia entrada de carga (el estándar Lightning), introducido desde 2011 y el cual es el principal motivo de que todavía tengamos el “cargador de iPhone” y el “cargador de Android”. Este cambio, por lo visto, no llegará hasta dentro de unos años, dado que las leyes europeas le exigirán a la compañía la incorporación de este puerto de carga para los teléfonos que se vendan en Europa a partir del 2024.\nFuera de estas características, los teléfonos no presentan mayores innovaciones, y eso ha sido una queja entre los fanáticos de la marca y un factor que ha hecho a varios usuarios el reconsiderar su decisión de compra para el presente año."
  },
  {
    "objectID": "posts/2022-10-11-iphone-14-caracteristicas-y-datos/index.html#características-precios-y-demanda-analicemos-los-datos-el-lanzamiento-del-teléfono-más-esperado-del-2022.",
    "href": "posts/2022-10-11-iphone-14-caracteristicas-y-datos/index.html#características-precios-y-demanda-analicemos-los-datos-el-lanzamiento-del-teléfono-más-esperado-del-2022.",
    "title": "iPhone 14: presentación, características y datos",
    "section": "",
    "text": "Los lanzamientos de productos tecnológicos suelen ser año con año eventos altamente esperados por los fanáticos de sus respectivas marcas, y ningún producto tecnológico es más anticipado año con año que el nuevo modelo del iPhone de Apple. La presentación del producto insignia de la empresa californiana suele ser un evento visto por millones de personas a lo largo del planeta, y no es para menos, ya que, si bien Apple no es la marca de celulares más vendida del mundo, el iPhone si es de los modelos de teléfono más solicitados por las masas, a tal grado de ocupar el 16% de la cuota de mercado de smartphones mundial.\nLos modelos presentados este año fueron el iPhone 14 y el iPhone 14 Pro en dos tamaños (6.1 y 6.7 pulgadas para cada modelo). El modelo base, el iPhone 14, cuenta con el mismo diseño, el mismo procesador y el mismo número de cámaras que la versión anterior, con la única diferencia de presentar un modelo cuya diagonal es 0.6 pulgadas más grande.\n\n\n\niPhone 14 Pro (izq) y iPhone 14 (der)\n\n\n\niPhone 14 Pro (izq) y iPhone 14 (der)\n\nEl modelo Pro cuenta igualmente con ligeras mejoras en el hardware, siendo su principal diferencia con respecto al modelo del año pasado la sustitución del notch o pestaña de la cámara frontal, colocando lo que la empresa denomina como “isla dinámica”. Esta isla es una abertura de mas pequeña en la parte superior de la pantalla que, en conjunto con el sistema operativo, adquiere distintas formas de acuerdo a la información que el teléfono desea proporcionar al usuario, haciendolo pensar que la abertura es un elemento más de la pantalla y de la interfaz de usuario.\nOtras características nuevas de los teléfonos fueron funcionalidades que nadie de sus usuarios desearía estar en situación de necesitar: la detección de choques vehiculares (Crash Detection) y el envío de mensajes de emergencia a través de satélites. La primera funcionalidad consiste en añadir sensores para detectar si el usuario se ha visto envuelto en un accidente y llamar a los servicios de emergencia en caso de que el usuario no pueda realizar esa comunicación, mientras que la segunda consiste en permitir a los usuarios en una situación emergencia lejos de la señal de teléfono el poder solicitar un rescate.\nLo que no tiene de nuevo (y muchos usuarios demandaban) era la adopción del estándar USB-C en los nuevos modelos. Actualmente el teléfono sigue usando su propia entrada de carga (el estándar Lightning), introducido desde 2011 y el cual es el principal motivo de que todavía tengamos el “cargador de iPhone” y el “cargador de Android”. Este cambio, por lo visto, no llegará hasta dentro de unos años, dado que las leyes europeas le exigirán a la compañía la incorporación de este puerto de carga para los teléfonos que se vendan en Europa a partir del 2024.\nFuera de estas características, los teléfonos no presentan mayores innovaciones, y eso ha sido una queja entre los fanáticos de la marca y un factor que ha hecho a varios usuarios el reconsiderar su decisión de compra para el presente año."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Sobre mí",
    "section": "",
    "text": "Hola.\nYo soy Juvenal Campos, y este es mi blog personal.\nSoy Ingeniero en Irrigación de Chapingo y Maestro en Economía por El Colegio de México, y actualmente trabajo en el Laboratorio Nacional de Políticas Públicas del CIDE como investigador asociado.\nSoy originario del Estado de Morelos, me gusta brincar chinelo, comer Cecina de Yeca y decir “si pues” cantadito. Mi pueblo se llama Ocuituco, y se encuentra en la región de los altos de Morelos, pegado al volcán Popocatépetl en esa parte del estado en la que ya no hace calor y tampoco tenemos albercas.\nMis hobbies son caminar, jugar videojuegos (Pokémon, Final Fantasy, Halo y Smash Bros), ir a correr/gimnasio, ver los Youtubes (un día sacaré mi canal de algo) y moverle al R, al HTML y al CSS (y de vez en cuando, al Python y al JS). También de vez en mes me veo alguna serie de Netflix o de Anime japonés.\nEste es mi blog personal, lo escribo principalmente motivado en la necesidad de dejar de ser solo un consumidor de contenido para pasar a generarlo. En esta página subiré proyectos personales, tutoriales de R, reseñas de libros, de juegos y de anime (aunque principalmente me enfocaré mas en el R) y bloguearé también de cosas de mi vida personal, así tipo diario.\nBienvenidos.\nJorge Juvenal Campos Ferreira."
  }
]