{
  "hash": "10fd9cae00935b2c580534de0aa87ed6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Convertir documentos de Word y Power Point a PDF en R\"\nauthor: \"Juvenal Campos\"\ndate: \"2022-08-10\"\ncategories: [tutoriales, R]\ntags: [pdf, word, powerpoint, automation, libreoffice]\n---\n\n## R cuenta con librerías capaces de ayudarnos a convertir archivos de Office a PDF, los cuales pueden ayudarnos cuando el _Guardar como..._ nos queda corto. \n\n![](images/Captura de Pantalla 2022-08-25 a la(s) 16.16.49.png)\n\nDurante la primera mitad del año me tocó estar trabajando con infografías en Word (y PPTX) acerca de un proyecto del cual no puedo hablar porque todavía no se publica. En un punto, en el equipo llegamos a tener 512 archivos de word y un día resultó que **teníamos que convertirlos todos a PDF**. Para agravar las cosas, yo **había estado trabajando en Power Point**, y también teníamos que hacer la conversión. \n\nEl método tradicional para convertir archivos de office a PDF es utilizando la función de _Guardar como..._ que ya viene en Word, o el _Exportar_ de Power Point. Esta es la opción directa. Sin embargo... yo tenía que hacer esto 512 veces, lo cual lo hacía que el proceso fuese bastante tardado. \n\nQuizá, si le mueves al R, sabrás que se puede trabajar con _documentos parametrizados_; esto es, documentos que cambian dependiendo de una base de datos. Sin embargo, como en el equipo se decidió que sería más práctico hacerlo en Word (porque generalmente, en un equipo de trabajo, no todos usan **R**, además de que Word es prácticamente un estándar de trabajo en las oficinas de todo el mundo, y quedaron más bonitos que lo que hubiese podido hacer). \n\nEntonces, **aprovechando mis conocimientos de programación y buscando una manera de automatizar el proceso** encontré una forma de realizar esta transformación utilizando código de R, para el caso en el cual tengas que transformar miles y miles de Words a PDF. \n\nPara que el código funcione se requiere lo siguiente: \n\n1. **R instalado** (y RStudio).\n\n2. Para que me funcionara a mí en mi Mac Pro M1 (2020), instalé una versión de _LibreOffice_; programa Open-Source de ofimática (el que generalmente viene para Línux). Si bien para Windows vi que existían métodos alternativos, creo que esta solución debería funcionar en una mayor cantidad de casos. \n\n![](images/Captura de Pantalla 2022-08-25 a la(s) 14.38.56.png)\n\n<b style = 'color:gray;text-align:center;'>Instalación de LibreOffice</b>\n\n3. **Documentos a transformar.** \n\nUna vez que contamos con estos elementos, el siguiente código nos puede ayudar a la transformación: \n\n## Caso de Transformación de Word: \n\nPara la transformación a Word vamos a utilizar el paquete `{doconv}` (disponible en el CRAN). \n\n![](images/Captura de Pantalla 2022-08-25 a la(s) 16.18.56.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Guardado automático en pdf:\n\n# Librerias ----\nlibrary(doconv)    # Convertir a PDF\nlibrary(tidyverse) # Manejo de datos\n\n# Carpeta de archivos WORD (donde tengo mis archivos) ----\n# Cambiar a la ubicación de tu carpeta: \norigen <- \"/Users/juvenalcampos/Downloads/Origen\"\n\n# Carpeta para depositar archivos PDF\n# Crear una carpeta nueva si se requiere.\ndestino <- \"/Users/juvenalcampos/Downloads/Destino\"\n\n# Proceso ----\n\n# 1. Guardamos los archivos. \narchivos <- list.files(origen) \ndirecciones <- str_c(origen, \"/\", list.files(origen))\n\n# Aplicamos el bucle de transformación: \nlapply(seq_along(direcciones), function(j){\n\n  # Usamos tryCatch por si algún paso se complica, el proceso no se detenga: \n  tryCatch({\n\n    direccion_archivo <- direcciones[j]\n    nombre_archivo <- archivos[j] %>%\n      str_replace(pattern = \".docx\", replacement = \".pdf\")\n\n    # Transformación: \n    docx2pdf(input =\n               direccion_archivo,\n             output =\n               str_c(destino, \"/\", nombre_archivo))\n\n    print(str_c(nombre_archivo))\n  },\n  \n  # Imprimimos los errores, para ver donde ocurrió el problema: \n  error = function(e){print(str_c(\"Error en j = \", nombre_archivo))})\n})\n```\n:::\n\n\n## Caso del Power Point: \n\n![](images/Captura de Pantalla 2022-08-25 a la(s) 16.18.44.png)\n\nEn este caso, me funcionó la librería `{docxtractr}` para realizar un proceso similar, solo que ahora con archivos de Power Point. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Librerias:\nlibrary(tidyverse)\nlibrary(docxtractr)\n\n# Carpeta de origen de los archivos: [CAMBIAR]: \norigen <- \"/Users/juvenalcampos/Downloads/Origen\"\n\n# Carpeta para depositar archivos PDF\n# Crear una carpeta nueva si se requiere.\ndestino <- \"/Users/juvenalcampos/Downloads/Destino\"\n\n# Archivos: \narchivos <- list.files(root, \n                       full.names = TRUE, \n                       pattern = \".pptx\")\n\n# Bucle de transformación: \nlapply(seq_along(archivos), function(i){\n  \n  tryCatch({\n  convert_to_pdf(path = archivos[i],\n                 pdf_file = str_c(destino, \"/\", \n                                  archivos[i] %>%\n                                    str_remove(pattern = \".pptx\"),\n                                  \".pdf\"))\n  print(i)},\n  \n  # Imprimimos los errores, para ver donde ocurrió el problema: \n  error = function(e){print(str_c(\"Error en = \", archivos[i]))})\n  \n})\n```\n:::\n\n\n### Observaciones: \n\nCheca que el documento **no** tenga el _Control de cambios_ activado, o el pdf se va a generar con comentarios incluídos. \n\n### Lógica del proceso: \n\nLa lógica del proceso (o al menos como yo la entendí) consiste en que R ejecuta una acción que le manda el archivo de Word a **LibreOffice** con la orden de transformarlo a PDF. La transformación **no** se hace en R, solo se gestiona el bucle de envíos al programa que **sí** lo hace. \n\nEspero que este proceso les sirva a aquellas personas que se vean en una situación similar; siempre que se pueda automatizar algún proceso tedioso en la oficina ( _entendido por mí como algo que hacemos igual por más de tres veces con audífonos puestos_) hay que tratar de ver si se puede automatizar. \n\nCualquier duda u observación, mandarla a mi correo `juvenalcampos.publicaciones@gmail.com` o dejar el comentario en la parte de abajo:\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}