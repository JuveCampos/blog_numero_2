{
  "hash": "a48b762c8230d02a47a9e655b9f1b764",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizando pir√°mides de poblaci√≥n en R\"\nauthor: \"Juvenal Campos\"\ndate: \"2020-01-26\"\ncategories: [R, ggplot2, demograf√≠a, visualizaci√≥n]\ntags: [pir√°mides de poblaci√≥n, R, ggplot2, INEGI, demograf√≠a]\n---\n\n\n\nLas pir√°mides de poblaci√≥n (o _pir√°mide demogr√°fica_, como le dicen los dem√≥grafos) son un tipo de gr√°fica que nos permite analizar la distribuci√≥n de la poblaci√≥n por edades en una regi√≥n determinada (municipio, estado o pa√≠s).\n\nDesde el punto de vista gr√°fico, se trata de un doble histograma de frecuencias, dispuestos de manera horizontal, donde convencionalmente **se ponen los grupos de edad masculina a la izquierda y los de poblaci√≥n femenina a la derecha**. En el eje _y_ (el de las ordenadas o el que va para arriba) se disponen los grupos de edad, mientras que en el eje _x_ (el de las abcisas, o el que va horizontal) van las cantidades de poblaci√≥n. Para m√°s informaci√≥n recomiendo leer este art√≠culo de [Wikipedia](https://es.wikipedia.org/wiki/Pir√°mide_de_poblaci√≥n). \n\nDesde el punto de vista de visualizaci√≥n de datos en R y a pesar de la gran utilidad y amplio uso de este tipo de gr√°ficas, no hay una funci√≥n `geom_popPyramid()` nativa en `ggplot2` que nos permita hacer pir√°mides de poblaci√≥n sin tanto dolor (aunque podr√≠amos programarla üòè). Sin embargo, en esta entrada de blog, nos dispondremos a generar una de estas gr√°ficas a partir de elementos ya conocidos de esta librer√≠a. \n\n## 1. Antecedentes. \n\nEl viernes pasado estaba intentando hacer una de estas gr√°ficas de poblaci√≥n en mi trabajo, siendo (como casi siempre) mi primer impulso buscar en Google _\"como graficar pir√°mides de poblaci√≥n en R\"_. Estos son algunos de los tutoriales y art√≠culos que me ayudaron: \n\n* http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html\n\n* https://klein.uk/teaching/viz/datavis-pyramids/\n\n* https://stackoverflow.com/questions/38268741/geom-bar-ggplot2-stacked-grouped-bar-plot-with-positive-and-negative-values-p\n\n* https://stackoverflow.com/questions/4559229/drawing-pyramid-plot-using-r-and-ggplot2\n\nTodos son muy buenos y sirven para complementar esta entrada. El problema que tuve al checarlos fu√© que 1) muchas funciones no estaban actualizadas y 2) las bases de datos eran inaccesibles, por lo que era imposible reproducir los ejemplos presentados. Es por eso que aqu√≠ presentamos una tercera opci√≥n (y en espa√±ol :3) para aquellos que tengan la necesidad de hacer una gr√°fica de poblaci√≥n en el futuro. \n\n# 2. Descripci√≥n del problema. \n\nVamos a elaborar la pir√°mide de poblaci√≥n del Estado de Morelos, M√©xico a partir de los datos reportados por la _Encuensta Intercensal 2015_ del INEGI en sus tabulados de Poblaci√≥n. \n\n## 2.1. Descarga de los datos. \n\nDescargamos los datos de poblaci√≥n de la p√°gina de la encuesta intercensal 2015. \n\nLa liga de descarga es la siguiente: \n\nhttps://www.inegi.org.mx/contenidos/programas/intercensal/2015/tabulados/01_poblacion_mor.xls\n\n(En caso de que alg√∫n gobierno austero decida eliminar las bases de datos de INEGI por alg√∫n motivo en los pr√≥ximos a√±os, igualmente guardar√© una [copia en mi Github](https://github.com/JuveCampos/juveBlog/raw/master/Pir√°mide%20de%20Poblaci√≥n/mor_pop.xls) de los datos).\n\n_**Nota 1.** Se supone que el lector sabe descargar librerias del CRAN._ \n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(scipen = 999)\n# Descarga de los datos.\nlibrary(curl)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nUsing libcurl 8.14.1 with LibreSSL/3.3.6 \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurl::curl_download(url = \"https://www.inegi.org.mx/contenidos/programas/intercensal/2015/tabulados/01_poblacion_mor.xls\", destfile = \"mor_pop.xls\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Leemos datos\n# Por tama√±o de localidad\nbd <- read_xls(\"mor_pop.xls\", sheet = 2, skip = 6)\n```\n:::\n\n\nLa funci√≥n anterior descargar√° el archivo en nuestro directorio de trabajo. La hoja 2 es la que contiene la poblaci√≥n _Por tama√±o de localidad_ y las 6 l√≠neas que se saltaron contienen el encabezado de logotipos que INEGI le pone a muchas de sus tablas. \n\n## 2.2. Procesado de la informaci√≥n. \n\nNecesitamos obtener una tabla adecuada para realizar nuestra gr√°fica, tal como se explica en el siguiente esquema: \n\n![](TablaFinal.png){width=80%}\n\nEste esquema nos permite declarar una columna √∫nica de una sola base de datos, y declarar estas columnas dentro de los est√©ticos globales del ggplot como se ve m√°s adelante.\n\nPara lograr esto, haremos el siguiente procesado de la informaci√≥n a trav√©s de la funci√≥n `tidyr::pivot_longer()`: \n\n![](TablaPivote.png)\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Librerias\nlibrary(tidyverse)\nlibrary(tidyr)\n\n# Procesamos datos\npop <- bd %>%\n# Filtramos los renglones vacios, \n# los renglones donde el Tama√±o de localidad` es el Total y \n# los `Grupos quinquenales de edad` son todos \"Total\"    \n  filter(!is.na(Estimador) &\n           Estimador == \"Valor\" &\n           `Tama√±o de localidad` == \"Total\" &\n           `Grupos quinquenales de edad` != \"Total\") %>%\n# Hacemos pivot longer rotando las columnas hombres y mujeres    \n  pivot_longer(cols = c(\"Hombres\", \"Mujeres\"),\n               names_to = \"Sexo\",\n               values_to = \"Poblacion por Sexo\") %>% \n# Nos quedamos con columnas utiles  \n  select(`Entidad federativa`, `Grupos quinquenales de edad`, \n         `Poblaci√≥n total`, Sexo, `Poblacion por Sexo`)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Checamos la base \npop\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 34 √ó 5\n   `Entidad federativa` `Grupos quinquenales de edad` `Poblaci√≥n total` Sexo   \n   <chr>                <chr>                                     <dbl> <chr>  \n 1 17 Morelos           00-04 a√±os                               157558 Hombres\n 2 17 Morelos           00-04 a√±os                               157558 Mujeres\n 3 17 Morelos           05-09 a√±os                               164416 Hombres\n 4 17 Morelos           05-09 a√±os                               164416 Mujeres\n 5 17 Morelos           10-14 a√±os                               169614 Hombres\n 6 17 Morelos           10-14 a√±os                               169614 Mujeres\n 7 17 Morelos           15-19 a√±os                               169269 Hombres\n 8 17 Morelos           15-19 a√±os                               169269 Mujeres\n 9 17 Morelos           20-24 a√±os                               174065 Hombres\n10 17 Morelos           20-24 a√±os                               174065 Mujeres\n# ‚Ñπ 24 more rows\n# ‚Ñπ 1 more variable: `Poblacion por Sexo` <dbl>\n```\n\n\n:::\n:::\n\n\n\nAhora que tenemos la base como la necesitamos, procedemos a hacer la gr√°fica. \n\n## 2.3. Graficando con `ggplot()`.\n\nPara graficar utilizamos la funci√≥n `ggplot()`.\n\n## Primera versi√≥n: utilizando `geom_col()`.\n\nLa primera versi√≥n que realizaremos ser√° utilizando la funci√≥n `geom_col()`. Esta funci√≥n nos permite realizar gr√°ficas de barras en R. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Grafica ----\nggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo)) +\n  geom_col(data = subset(pop, Sexo == \"Hombres\") %>% \n             mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),\n              width = 0.5, fill = \"blue\") +\n  geom_col(data = subset(pop, Sexo == \"Mujeres\"),\n           width = 0.5, fill = \"pink\") + \n  coord_flip()\n```\n:::\n\n\n\n![](unnamed-chunk-5-1.png)\n\n<b style = 'color:red; text-align:centered;'>N√≥tese las escalas del eje _x_</b>\n\nAhora, tenemos que enfocarnos en la parte del eje de poblaci√≥n. Primero que nada, tenemos que hacer un poco de an√°lisis. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Valores maximos de poblaci√≥n: \nmax(pop$`Poblacion por Sexo`)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 88967\n```\n\n\n:::\n:::\n\n\nEl m√°ximo de poblaci√≥n es 88,967 personas (correspondiente a Mujeres morelenses entre 20 a 24 a√±os). Para el eje `x`, vamos a poner escalas cada 20,000 personas (para que sean unas 5 marcas en las escalas). \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# BREAKS - DEFINEN LA POSICI√ìN \n# Obtenemos los puntos donde se van a poner las escalas de la poblaci√≥n. \nseq(0, 100000, by = 20000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]      0  20000  40000  60000  80000 100000\n```\n\n\n:::\n\n```{.r .cell-code}\nseq(-100000, -20000, by = 20000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -100000  -80000  -60000  -40000  -20000\n```\n\n\n:::\n\n```{.r .cell-code}\n# Secuencia de puntos donde se van a poner las escalas del eje x\nc(seq(-100000, -20000, by = 20000), \n  seq(0, 100000, by = 20000))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] -100000  -80000  -60000  -40000  -20000       0   20000   40000   60000\n[10]   80000  100000\n```\n\n\n:::\n:::\n\n\nComo vemos arriba, es una secuencia que va desde -100,000 hasta 100,000. Esto implica que, dentro de la gr√°fica, `ggplot()` va a poner las etiquetas en los puntos marcados arriba, como puede verse en la siguiente im√°gen: \n\n\nAhora, pongamosle las etiquetas en los puntos que determinamos arriba, a trav√©s de la funci√≥n \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# LABELS - DEFINEN EL CONTENIDO\n\nc(seq(-100000, -20000, by = 20000) * -1, \n  seq(0, 100000, by = 20000)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 100000  80000  60000  40000  20000      0  20000  40000  60000  80000\n[11] 100000\n```\n\n\n:::\n:::\n\n\nPara este caso, las etiquetas son casi iguales que los quiebres que calculamos arriba, con la diferencia de que la parte de la poblaci√≥n masculina tienen que ser positivos, no negativos (por eso los multiplicamos por -1). \n\nAhora, incorporamos esto en la gr√°fica que ya hicimos arriba a trav√©s de la funci√≥n `scale_y_continuous()`.\n\nEmpezamos declarando los elementos est√©ticos. Los est√©ticos globales que vamos a usar son el `x`, el `y`, y el `fill`. `x` nos determinar√° la variable categ√≥rica que ir√° en el eje x, `y` la variable num√©rica que ir√° en el eje `y` y `fill` la variable categ√≥rica que clasifica a los datos en dos categor√≠as, `Hombres` y `Mujeres`, asignando un color distinto a cada tipo de dato. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# No correr! Abajo est√° completo.\nggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo))\n```\n:::\n\n\nDespu√©s a√±adimos las gr√°ficas de columnas mediante la funci√≥n `geom_col()` con subconjuntos de los datos filtrando por hombres y mujeres. Despu√©s hacemos un cambio de ejes y al final a√±adimos las etiquetas en los ejes de las gr√°ficas. A continuaci√≥n el c√≥digo completo. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Grafica ----\n(plt <- ggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo)) +\n  # Seccion de HOMBRES\n  geom_col(data = subset(pop, Sexo == \"Hombres\") %>% \n             # Convertimos los datos de los Hombres en negativos\n             mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),\n         width = 0.5, fill = \"blue\") +\n  # Seccion de MUJERES\n  geom_col(data = subset(pop, Sexo == \"Mujeres\"),\n         width = 0.5, fill = \"pink\") + \n  # Cambio de ejes de coordenadas\n  coord_flip() + \n     scale_y_continuous(\n     breaks = c(seq(-100000, -20000, by = 20000), \n                seq(0, 100000, by = 20000)),\n     labels = c(seq(-100000, -20000, by = 20000) * -1, \n                seq(0, 100000, by = 20000))) )\n```\n:::\n\n\n![](unnamed-chunk-10-1.png)\n\nYa a partir de aqu√≠ lo que procede es personalizar el tema y las etiquetas. \n\n## 2.4. Segunda versi√≥n: utilizando `geom_linerange()`.\n\nOtra versi√≥n muy com√∫n de las gr√°ficas de pir√°mides de poblaci√≥n consiste en poner los grupos de edad en el centro de la gr√°fica. Esto no es posible de realizar con las barras normales de `ggplot`, por lo que utilizaremos un elemento gr√°fico llamado `geom_linerange()`, el cual nos permite representar de manera gr√°fica intervalos con inicio y final. \n\nLa √∫nica diferencia entre el metodo anterior y el que viene a continuaci√≥n, consiste en 1) Cambiar el `geom_col()` por un `geom_linerange()`, incluir dentro el `aes(ymin, ymax)` y 3) tambi√©n introducir como etiquetas de texto en el centro de la gr√°fica con `geom_label()`.\n\nIgualmente, hay que programar un `desplazamiento` de las barras a la derecha y a la izquierda, para dejar el espacio para las etiquetas que van a ir en el centro. Para la gr√°fica que queremos hacer dejaremos un desplazamiento de 10,000 unidades de poblaci√≥n (la magnitud de este desplazamiento depende de los datos del eje _y_, en este caso de los n√∫meros de poblaci√≥n). \n\nSe escogi√≥ 10,000 como desplazamiento porque as√≠ cabe bien el texto de las categorias de edad. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Grafica ----\ndesplazamiento <- 10000\n```\n:::\n\n\nPara este caso modificaremos ligeramente las etiquetas: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# BREAKS - DEFINEN LA POSICION\nc(seq(-180000, 0, by = 30000) - desplazamiento,\n                seq(0, 180000, by = 30000) + desplazamiento)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] -190000 -160000 -130000 -100000  -70000  -40000  -10000   10000   40000\n[10]   70000  100000  130000  160000  190000\n```\n\n\n:::\n:::\n\n\nEstas ser√°n las nuevas coordenadas dentro del eje X en las que se van a colocar las nuevas etiquetas. Es lo mismo que con las anteriores, solo que sumandole/rest√°ndole el desplazamiento. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# LABELS - DEFINEN EL CONTENIDO\nc(rev(seq(0, 180000, by = 30000)), \n  seq(0, 180000, by = 30000))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 180000 150000 120000  90000  60000  30000      0      0  30000  60000\n[11]  90000 120000 150000 180000\n```\n\n\n:::\n:::\n\n\nAhora si, hacemos la gr√°fica: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Graficamos\nggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo)) +\n  geom_linerange(data = subset(pop, Sexo == \"Hombres\") %>% \n                   # Convertimos los datos de los Hombres en negativos\n                 mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),\n                 aes(ymin = -desplazamiento, \n                     ymax = -desplazamiento +`Poblacion por Sexo`),\n                 size = 5, \n                 color = \"blue\") +\n  geom_linerange(data = subset(pop, Sexo == \"Mujeres\"),\n                 aes(ymin = desplazamiento, \n                     ymax = desplazamiento  +`Poblacion por Sexo`),\n                 size = 5, \n                 color = \"pink\") +\n  # Cambiamos el orden de los ejes de la graficas \n  coord_flip()  +\n   scale_y_continuous(\n     breaks = c(seq(-180000, 0, by = 30000) - desplazamiento,\n                seq(0, 180000, by = 30000) + desplazamiento),\n     labels = c(rev(seq(0, 180000, by = 30000)),\n               seq(0, 180000, by = 30000))) +\n  # Eliminamos el texto del eje x volteado\n   theme(plot.title = element_text(hjust = .5),\n        axis.ticks = element_blank(),\n        axis.text.y = element_blank()\n        ) +   # Centre plot title\n   # Aniadimos la escala de texto en el centro. \n   geom_label(aes(x = `Grupos quinquenales de edad`, \n                  y = 0, \n                  label = `Grupos quinquenales de edad`),\n   # Caracteristicas del texto             \n             family = \"Arial\",\n             size = 3.5, \n             label.padding = unit(0.0, \"lines\"), \n             label.size = 0,\n             label.r = unit(0.0, \"lines\"), \n             fill = \"#FFFFFF\", \n             alpha = 0.9, \n             color = \"#5D646F\")\n```\n:::\n\n\n![](unnamed-chunk-14-1.png)\n\n## 2.5. ¬øQu√© sigue? \n\nLo que sigue a continuaci√≥n es embellecer la gr√°fica modificando los temas: fondo de la gr√°fica, tipo de letra, colores, etc. Igualmente, a√±adir formato a los n√∫meros, poner t√≠tulos, subt√≠tulos y pies de p√°gina, modificar los colores (quiz√° el rosa para mujeres y azul para hombres no parezca tan adecuado), entre alguna otra funci√≥n a√±adida que nos interese agregar. \n\nUna de las ventajas de hacer visualizaciones en c√≥digo es que es dif√≠cil solo la primera vez. Una vez que ya tenemos el c√≥digo, podemos tenerlo guardado para hacer otras gr√°ficas cuando salgan nuevos datos de poblaci√≥n ( _alguien dijo censo 2020?_) o que podemos utilizarlo para graficar otros datos (por ejemplo, pir√°mides para municipios dentro de un estado o de otros estados, o por tama√±os de comunidad). O ya de plano construir una aplicaci√≥n en _Shiny_ para que el usuario haga las pir√°mides de poblaci√≥n que quiera. Explora las posibilidades. \n\n## 2.6 Ejemplo reproducible. \n\nTras la publicaci√≥n de esta entrada de post, recib√≠ un par de comentarios muy acertados: \n\n<blockquote class=\"twitter-tweet\"><p lang=\"es\" dir=\"ltr\">Recomendaciones: tu √∫ltimo grupo de edad agrupa demasiada poblaci√≥n, separar√≠a 75-79, 80-84 y 85+. Recomiendo tambi√©n prorratear la poblaci√≥n con edad No especificada. Finalmente, para quien quiera comparar estructuras lo ideal es usar proporciones, no volumen.</p>&mdash; El Mau (@mochis22) <a href=\"https://twitter.com/mochis22/status/1222153482703998976?ref_src=twsrc%5Etfw\">January 28, 2020</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"es\" dir=\"ltr\">Buen√≠simoüëèüèºüëèüèºüëèüèº! Igual ser√≠a bueno una legend o geom_text para saber qu√© significa los colores rosas y azules, no? Jejeje</p>&mdash; Claudio Pacheco (@claudiodanielpc) <a href=\"https://twitter.com/claudiodanielpc/status/1222012861150646272?ref_src=twsrc%5Etfw\">January 28, 2020</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nPor lo tanto, y para no reescribir todo de nuevo, anexo un ejemplo reproducible que a√±ade las sugerencias mencionadas arriba. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Descarga de los datos.\nlibrary(curl)\nlibrary(readxl)\nlibrary(tidyverse)\ncurl::curl_download(url = \"https://www.inegi.org.mx/contenidos/programas/intercensal/2015/tabulados/01_poblacion_mor.xls\", destfile = \"mor_pop.xls\")\n\n# Leemos datos\n# Por tama√±o de localidad\nmor <- read_xls(\"mor_pop.xls\", sheet = 2, skip = 6)\n\n# Procesado de los datos\npop <- mor %>%\n  # Filtramos los renglones vacios,\n  # los renglones donde el Tama√±o de localidad` es el Total y\n  # los `Grupos quinquenales de edad` son todos \"Total\"    \n  filter(!is.na(Estimador) &\n           Estimador == \"Valor\" &\n           `Tama√±o de localidad` == \"Total\" &\n           `Grupos quinquenales de edad` != \"Total\") %>%\n  mutate(totH = sum(Hombres),\n         totM = sum(Mujeres)) %>%\n  mutate(Hombres = (Hombres/totH)*100,\n         Mujeres = (Mujeres/totM)*100\n  ) %>%\n  select(-totH, -totM) %>%\n  # Hacemos pivot longer rotando las columnas hombres y mujeres    \n  pivot_longer(cols = c(\"Hombres\", \"Mujeres\"),\n               names_to = \"Sexo\",\n               values_to = \"Poblacion por Sexo\") %>%\n  # Nos quedamos con columnas utiles  \n  select(`Entidad federativa`, `Grupos quinquenales de edad`,\n         `Poblaci√≥n total`, Sexo, `Poblacion por Sexo`) %>%\n  filter(!(`Grupos quinquenales de edad` %in% c(\"75 a√±os y m√°s\",\"No especificado\")))\n\n\n# Elaboracion de la grafica\nggplot(pop, aes(x = `Grupos quinquenales de edad`,\n                y = `Poblacion por Sexo`,\n                fill = Sexo)) +\n  geom_bar(data = subset(pop, Sexo == \"Hombres\") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),\n           stat = \"identity\", width = 0.5, fill = \"blue\") +\n  geom_bar(data = subset(pop, Sexo == \"Mujeres\"),\n           stat = \"identity\", width = 0.5, fill = \"pink\") +\n  coord_flip() +\n  ggthemes::theme_tufte() +\n  theme(plot.title = element_text(family = \"Arial\", hjust = 0.5, size = 20),\n        axis.text.x = element_text(family = \"Arial\"),\n        axis.text.y = element_text(family = \"Arial\")\n  ) +\n  labs(title = \"Pir√°mide Poblacional de Morelos, 2015\",\n       x = \"\",\n       y = \"Hombres                        Mujeres\",\n       caption = \"Fuente: INEGI. Encuesta intercensal 2015. Tabulados de Poblaci√≥n \\nSe omiten personas de 75 a√±os y m√°s, por venir aglomeradas en un mismo grupo de edad.\") +\n  scale_y_continuous(breaks = seq(-12, 12, by = 2), labels = paste0(c(seq(-12, 0, by = 2)*-1, seq(2, 12, by = 2)), \"%\"))\n\nggsave(filename= \"ppMorelos.png\", dpi = 300)\n```\n:::\n\n![](FinalPiramide.png)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}