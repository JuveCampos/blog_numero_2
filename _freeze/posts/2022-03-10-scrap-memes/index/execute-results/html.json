{
  "hash": "d59f404706cddf257f1bdb2a220b8f40",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Scrap de Memes en R\"\nauthor: \"Jorge Juvenal Campos Ferreira\"\ndate: \"2022-03-10\"\ncategories:\n  - R\n  - web scraping\n  - memes\n  - twitter\ntags:\n  - R\n  - rvest\n  - rtweet\n  - data mining\nimage: \"memes.gif\"\n---\n\n## Introducción\n\nEn este post vamos a aprender a hacer web scraping de memes de Twitter usando R. Utilizaremos las librerías `rvest` para el scraping y `rtweet` para interactuar con la API de Twitter.\n\n![Memes scraped from Twitter](memes.gif){fig-align=\"center\"}\n\n## Librerías necesarias\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\nlibrary(rtweet)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(ggplot2)\n```\n:::\n\n\n## Proceso de scraping\n\nEl proceso incluye:\n\n1. **Configuración de la API de Twitter**\n2. **Búsqueda de tweets con memes**\n3. **Extracción de imágenes**\n4. **Análisis de patrones**\n\n### Configuración inicial\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Configurar credenciales de Twitter API\nauth_setup_default()\n\n# Términos de búsqueda para memes\nmeme_terms <- c(\"meme\", \"momo\", \"funny\", \"humor\")\n```\n:::\n\n\n### Búsqueda y extracción\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Buscar tweets con memes\ntweets_memes <- search_tweets(\n  q = paste(meme_terms, collapse = \" OR \"),\n  n = 1000,\n  include_rts = FALSE,\n  type = \"popular\"\n)\n\n# Filtrar tweets con imágenes\ntweets_with_images <- tweets_memes %>%\n  filter(!is.na(media_url))\n```\n:::\n\n\n## Análisis de resultados\n\nLos memes más populares suelen tener:\n\n- **Mayor engagement** (likes + retweets)\n- **Timing específico** (fines de semana, noches)\n- **Temas trending** del momento\n\n::: {.callout-tip}\n## Consideraciones éticas\n\nRecuerda respetar los términos de servicio de Twitter y los derechos de autor de las imágenes al hacer scraping.\n:::\n\n## Visualización\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfica de engagement por hora\ntweets_memes %>%\n  mutate(hour = hour(created_at)) %>%\n  group_by(hour) %>%\n  summarise(\n    avg_likes = mean(favorite_count, na.rm = TRUE),\n    avg_rts = mean(retweet_count, na.rm = TRUE)\n  ) %>%\n  ggplot(aes(x = hour)) +\n  geom_line(aes(y = avg_likes, color = \"Likes\")) +\n  geom_line(aes(y = avg_rts, color = \"Retweets\")) +\n  labs(\n    title = \"Engagement de memes por hora del día\",\n    x = \"Hora\",\n    y = \"Promedio\",\n    color = \"Métrica\"\n  ) +\n  theme_minimal()\n```\n:::\n\n\n## Conclusiones\n\nEl scraping de memes nos permite entender:\n\n- Patrones de humor en redes sociales\n- Momentos de mayor actividad\n- Temas que generan más engagement\n\n::: {.callout-note}\n## Código completo\n\nEl código completo está disponible en mi [repositorio de GitHub](https://github.com/JuveCampos).\n:::\n\n---\n\n¿Te gustó este tutorial? ¡Sígueme en Twitter [@JuvenalCamposF](https://twitter.com/JuvenalCamposF) para más contenido de R!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}